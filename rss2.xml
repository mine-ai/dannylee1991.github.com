<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>studyAI</title>
    <link>http://studyai.site/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Wed, 20 Dec 2017 08:40:48 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【原创】AI-QI量化平台搭建爬坑笔记-小心偏斜类问题</title>
      <link>http://studyai.site/2017/12/20/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91AI-QI%E9%87%8F%E5%8C%96%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E7%88%AC%E5%9D%91%E7%AC%94%E8%AE%B0-%E5%B0%8F%E5%BF%83%E5%81%8F%E6%96%9C%E7%B1%BB%E9%97%AE%E9%A2%98/</link>
      <guid>http://studyai.site/2017/12/20/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91AI-QI%E9%87%8F%E5%8C%96%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E7%88%AC%E5%9D%91%E7%AC%94%E8%AE%B0-%E5%B0%8F%E5%BF%83%E5%81%8F%E6%96%9C%E7%B1%BB%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Wed, 20 Dec 2017 06:54:00 GMT</pubDate>
      <description>
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;原创文章，转载请注明出处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先安利一波广告：&lt;/p&gt;
&lt;p&gt;最近利用业余时间搭建了一个智能量化投资平台，代码已经全部开源：&lt;a href=&quot;https://github.com/DannyLee1991/a
        
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>原创文章，转载请注明出处</p></blockquote><p>首先安利一波广告：</p><p>最近利用业余时间搭建了一个智能量化投资平台，代码已经全部开源：<a href="https://github.com/DannyLee1991/ai_qi" target="_blank" rel="external">https://github.com/DannyLee1991/ai_qi</a></p><p>目前已经实现的功能有：</p><ul><li>数据的抓取（数据来源<a href="tushare.org">tushare</a>}）</li></ul><p><img src="/img/17_12_20/001.png" alt=""></p><ul><li>数据入库，并在界面上可以执行sql操作</li></ul><p><img src="/img/17_12_20/002.png" alt=""></p><ul><li>数据可视化</li></ul><p><img src="/img/17_12_20/003.png" alt=""><br><img src="/img/17_12_20/004.png" alt=""></p><ul><li>数据集创建</li></ul><p>数据集管理</p><p><img src="/img/17_12_20/005.png" alt=""></p><p>数据集创建</p><p><img src="/img/17_12_20/006.png" alt=""></p><p>数据集查看</p><p><img src="/img/17_12_20/005.png" alt=""></p><ul><li>数据预处理</li></ul><p>// 暂无界面</p><p>正在开发中的功能：</p><ul><li>数据建模</li><li>接入交易接口</li><li>…</li></ul><p>各个已有的功能目前也只是做了部分实现，先把各个环节打通，然后在慢慢填充。最终的目标是利用机器学习算法来预测分析各种投资数据。</p><p>欢迎各位大牛拍砖指导~</p><hr><p>好，以上不是本文的重点，本文重点是这两天在建立第一个模型过程中遇到的一个坑。</p><hr><h3 id="数据集介绍"><a href="#数据集介绍" class="headerlink" title="数据集介绍"></a>数据集介绍</h3><p>第一个模型，我准备使用日交易数据来预测次日的涨跌幅度，使用的数据来自日交易数据表：</p><p><img src="/img/17_12_20/008.png" alt=""></p><p>这是对应的原始数据集详情信息：</p><p><img src="/img/17_12_20/009.png" alt=""></p><p>其中  除了X的<strong>‘date’(时间)</strong>特征之外，其他的特征都是float类型的数据。暂时先剔除这一维度的数据，所以最后用来训练的X的shape是<code>(292583, 15)</code>。</p><p>Y的shape不变，是<code>(292583, 1)</code>。</p><p>Y的数据类型也是float。</p><blockquote><p>这里先解释一下<strong>Y</strong>的含义：Y对应的数据是涨跌幅，但和与之对应的X的数据并不是同一天的，这里<strong>日期间隔1</strong>的含义是Y取的是相对于X的数据的时间的下一日的数据，因为我们要预测的是次日涨跌幅。</p></blockquote><p>对于分类模型，我们的Y应该是类别标签，而不能是连续型数值，所以我们应该把当前的float类型的Y，转换成某种类别标签来表示。</p><p>一种很容易理解的方式，就是float转int，简单粗暴：</p><p>eg:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y = [<span class="number">1.1</span>, <span class="number">2.6</span>, <span class="number">3.5</span>, <span class="number">-1.8</span>, ...]</div></pre></td></tr></table></figure><p>转换为int之后</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">-1</span>, ...]</div></pre></td></tr></table></figure><p>但这里有一个小坑，负数的标签在带入到tensorflow中训练是会报错的，所以把标签数据+10，全部转为大于等于0的数据，处理之后的效果为：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y = [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">9</span>, ...]</div></pre></td></tr></table></figure><p>在经过上述的预处理之后，Y被处理成了21个类别（-10到10之间一共21个int值）的数据集。</p><p>然后就是将数据打乱，按照6:2:2的比例将数据分割为<strong>训练集</strong>、<strong>验证集</strong>和<strong>测试集</strong>。</p><hr><h3 id="带入训练"><a href="#带入训练" class="headerlink" title="带入训练"></a>带入训练</h3><p>仿照tensorflow的<a href="https://www.tensorflow.org/get_started/estimator" target="_blank" rel="external">demo</a>，将数据带入一个DNN模型，进行训练。</p><p>没有进行什么特殊的调参，最终准确率竟然达到了接近50%！</p><p><img src="/img/17_12_20/010.png" alt=""></p><p>要知道这是21个类别的分类问题，50%的准确率已经远远高于均匀分布情况下随机选择的准确率（大约是4.8%）了。</p><p>于是我觉得21类数据，准确率就能达到这么高，那如果我将类别改为2类，准确率应该会大幅提升的。</p><p>于是我重新将Y的数据改为了0和1两种类别，0代表跌1代表涨。</p><p>但实际情况，并没有好很多，准确率大概达到52%左右。</p><p>看到这种结果，第一时间，我是怀疑自己代码有没有哪里写错，但经过排查，并没有发现有什么异常。</p><p>后来，又尝试将数据分为4类，8类来训练，得到的结果依然是50%左右。</p><p>WTF？</p><h3 id="原来是偏斜类在搞鬼"><a href="#原来是偏斜类在搞鬼" class="headerlink" title="原来是偏斜类在搞鬼"></a>原来是偏斜类在搞鬼</h3><blockquote><p><a href="http://t.cn/RSh83NE" target="_blank" rel="external">这里有篇关于偏斜类的文章</a>，值得一看。</p></blockquote><p>我将原始数据绘制成柱状图之后，发现了问题所在：</p><p><img src="/img/17_12_20/011.png" alt=""></p><p>数据在各个类别上<strong>并不是均匀分布的</strong>，大部分都聚集在了10（对应涨跌幅为0%）的位置上。而我训练出来的模型，带入一批测试数据后，预测结果也都是10。</p><p>也就是说，我们的分类器，就算完全没有识别能力，输入任何值，输出的结果都是10这种类别，那么这个分类器就有50%的准确率！！！</p><p>这是一个很傻的结果，就好比一个完全不懂股票的人，你问他某只股票明天会不会涨，他只要回答：“明天不涨不跌”，那么他就有50%的概率猜对了。</p><p>好吧，这并不是我们想要的效果，那么我们如何避免这种情况呢？</p><h3 id="想办法让各个类别的数据呈现均匀分布"><a href="#想办法让各个类别的数据呈现均匀分布" class="headerlink" title="想办法让各个类别的数据呈现均匀分布"></a>想办法让各个类别的数据呈现均匀分布</h3><p>我想到的办法是在标签数据生成的过程中做些手脚。使得各个类别的数据呈现出均匀分布的情况。</p><p>所以我写了一个函数，用来将数据处理成均匀分布的标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">uniform_distribution</span><span class="params">(Y, n, l_type=<span class="string">'b'</span>)</span>:</span></div><div class="line">    <span class="string">'''</span></div><div class="line">    平均分布</div><div class="line"></div><div class="line">    将Y按照值的大小进行均匀分布的方式分割成n等分</div><div class="line">    并生成对应的类别标签</div><div class="line"></div><div class="line">    :param Y: 数据源  形状为(num,)</div><div class="line">    :param n: 将数据分割为n等分</div><div class="line">    :param l_type: 分割数据之后 标签的取值类别&#123;'b','s','n'&#125;</div><div class="line">                'b' : 类别标签为区间范围内的最大值</div><div class="line">                's' : 类别标签为区间范围内的最小值</div><div class="line">                'n' : 类别标签为区间范围内的平均值</div><div class="line"></div><div class="line">    :return:</div><div class="line"></div><div class="line">    eg：</div><div class="line">    Y = [1,1,2,3,4,4,5,6,7]</div><div class="line">    n = 5</div><div class="line">    l_type = 'b'</div><div class="line">    result = [1 1 3 3 4 4 6 6 7]</div><div class="line"></div><div class="line">    n = 3</div><div class="line">    l_type = 's'</div><div class="line">    result = [1 1 1 2 2 2 4 4 4]</div><div class="line"></div><div class="line">    n = 5</div><div class="line">    l_type = 'n'</div><div class="line">    result = [ 1.   1.   2.   2.   3.5  3.5  5.   5.   6.5]</div><div class="line"></div><div class="line">    '''</div><div class="line"></div><div class="line">    node_list = gen_nodelist(Y, n)</div><div class="line">    toY = []</div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> Y:</div><div class="line">    <span class="comment"># 这里虽然得到的是float类型的值，但tensorflow的类别标签 只能是int类型，所以将对应的索引作为标签值来使用</span></div><div class="line">        index, val = get_label(num, node_list, l_type)</div><div class="line">        toY.append(index)</div><div class="line"></div><div class="line">    print(<span class="string">"node list &gt;&gt;"</span>)</div><div class="line">    print(node_list)</div><div class="line">    <span class="keyword">return</span> np.array(toY)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_label</span><span class="params">(num, node_list, l_type)</span>:</span></div><div class="line">    <span class="comment"># 下限</span></div><div class="line">    lm = <span class="number">0</span></div><div class="line">    <span class="comment"># 上限</span></div><div class="line">    um = <span class="number">0</span></div><div class="line">    target = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="comment"># 节点区间是(lm,um]</span></div><div class="line">    <span class="keyword">for</span> index, node <span class="keyword">in</span> enumerate(node_list):</div><div class="line">        <span class="keyword">if</span> node &gt;= num:</div><div class="line">            <span class="keyword">if</span> index &gt; <span class="number">0</span>:</div><div class="line">                um = node</div><div class="line">                lm = node_list[index - <span class="number">1</span>]</div><div class="line">                target = index</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line">    label = <span class="string">''</span></div><div class="line">    <span class="keyword">if</span> l_type == <span class="string">'s'</span>:</div><div class="line">        label = lm</div><div class="line">    <span class="keyword">elif</span> l_type == <span class="string">'b'</span>:</div><div class="line">        label = um</div><div class="line">    <span class="keyword">elif</span> l_type == <span class="string">'n'</span>:</div><div class="line">        label = (lm + um) / <span class="number">2</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> target, label</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_nodelist</span><span class="params">(data, n)</span>:</span></div><div class="line">    <span class="string">'''</span></div><div class="line">    生成节点列表  节点是指示数据的分割点</div><div class="line">    :param data: 原始数据 需要被分割的数据</div><div class="line">    :param n: 分割的份数</div><div class="line">    :return:</div><div class="line">    '''</div><div class="line">    sorted_list = sorted(data)</div><div class="line">    size = len(sorted_list)</div><div class="line">    node_list = []</div><div class="line">    block_size = math.ceil(size / n)</div><div class="line">    <span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(sorted_list):</div><div class="line">        <span class="keyword">if</span> (index + <span class="number">1</span>) % block_size == <span class="number">0</span>:</div><div class="line">            node_list.append(item)</div><div class="line">        <span class="keyword">elif</span> index == <span class="number">0</span>:</div><div class="line">            node_list.append(item)</div><div class="line">        <span class="keyword">elif</span> index == size - <span class="number">1</span>:</div><div class="line">            node_list.append(item)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> node_list</div></pre></td></tr></table></figure><p>用这个函数重新预处理我们的Y，这里我们将Y分为10种类别，Y按照以下的标签值，重新赋值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="number">-10.08</span>, <span class="number">-2.3900000000000001</span>, <span class="number">-1.4199999999999999</span>, <span class="number">-0.84999999999999998</span>, <span class="number">-0.40999999999999998</span>, <span class="number">0.0</span>, <span class="number">0.28999999999999998</span>, <span class="number">0.68999999999999995</span>, <span class="number">1.24</span>, <span class="number">2.25</span>, <span class="number">10.16</span>]</div></pre></td></tr></table></figure><p>可以看到，这些标签值并不是线性的，这是因为我们的数据不是均匀分布的。</p><p>按照这种标签处理之后，将数据绘制成柱状图后，如下：</p><p><img src="/img/17_12_20/012.png" alt=""></p><p>接下来带入训练就比较正常了。</p>]]></content:encoded>
      
      <comments>http://studyai.site/2017/12/20/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91AI-QI%E9%87%8F%E5%8C%96%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E7%88%AC%E5%9D%91%E7%AC%94%E8%AE%B0-%E5%B0%8F%E5%BF%83%E5%81%8F%E6%96%9C%E7%B1%BB%E9%97%AE%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>10分钟上手Pandas</title>
      <link>http://studyai.site/2017/11/30/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BPandas/</link>
      <guid>http://studyai.site/2017/11/30/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BPandas/</guid>
      <pubDate>Thu, 30 Nov 2017 03:17:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/10min.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是关于pandas的一个简短的介绍，主要面向的是
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="external">原文地址</a></p><p>这是关于pandas的一个简短的介绍，主要面向的是新手用户。你可以在<a href="http://pandas.pydata.org/pandas-docs/stable/cookbook.html#cookbook" target="_blank" rel="external">Cookbook</a>查看更多复杂的使用方式。</p><p>通常情况下，我们按照下面这种方式引入：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="type">In</span> [<span class="number">1</span>]: <span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line"><span class="type">In</span> [<span class="number">2</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="type">In</span> [<span class="number">3</span>]: <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div></pre></td></tr></table></figure><h2 id="对象创建"><a href="#对象创建" class="headerlink" title="对象创建"></a>对象创建</h2><p>见<a href="http://pandas.pydata.org/pandas-docs/stable/dsintro.html#dsintro" target="_blank" rel="external">数据结构介绍部分</a>。</p><p>通过传入一个list的数值来创建一个<code>Series</code>，pandas会创建一个默认的整数索引:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">4</span>]: s = pd.Series([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,np.nan,<span class="number">6</span>,<span class="number">8</span>])</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">5</span>]: s</div><div class="line"><span class="keyword">Out</span>[<span class="number">5</span>]: </div><div class="line"><span class="number">0</span>    <span class="number">1.0</span></div><div class="line"><span class="number">1</span>    <span class="number">3.0</span></div><div class="line"><span class="number">2</span>    <span class="number">5.0</span></div><div class="line"><span class="number">3</span>    <span class="meta">NaN</span></div><div class="line"><span class="number">4</span>    <span class="number">6.0</span></div><div class="line"><span class="number">5</span>    <span class="number">8.0</span></div><div class="line"><span class="symbol">dtype:</span> <span class="meta">float64</span></div></pre></td></tr></table></figure><p>通过传入一个numpy数组来创建一个’DataFrame’，带有一个datetime的索引以及标签列:</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">6</span>]: dates = pd.date_range('<span class="number">20130101</span>', periods=<span class="number">6</span>)</div><div class="line"></div><div class="line">In [<span class="number">7</span>]: dates</div><div class="line">Out[<span class="number">7</span>]: </div><div class="line">DatetimeIndex(['<span class="number">2013-01-01</span>', '<span class="number">2013-01-02</span>', '<span class="number">2013-01-03</span>', '<span class="number">2013-01-04</span>',</div><div class="line">               '<span class="number">2013-01-05</span>', '<span class="number">2013-01-06</span>'],</div><div class="line">              dtype='datetime64[ns]', freq='D')</div><div class="line"></div><div class="line">In [<span class="number">8</span>]: df = pd.DataFrame(np.random.randn(<span class="number">6</span>,<span class="number">4</span>), index=dates, columns=list('ABCD'))</div><div class="line"></div><div class="line">In [<span class="number">9</span>]: df</div><div class="line">Out[<span class="number">9</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span></div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span>  <span class="number">0.113648</span> -<span class="number">1.478427</span>  <span class="number">0.524988</span></div></pre></td></tr></table></figure><p>通过传入一个可以转换为类series（series-like）的字典对象来创建一个<code>DataFrame</code>:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">10</span>]: df2 = pd.DataFrame(&#123; <span class="string">'A'</span> : 1.,</div><div class="line">   ....:                      <span class="string">'B'</span> : <span class="type">pd.Timestamp</span>('<span class="number">20130102</span>'),</div><div class="line">   ....:                      <span class="string">'C'</span> : <span class="type">pd.Series</span>(<span class="number">1</span>,index=list(<span class="keyword">range</span>(<span class="number">4</span>)),dtype=<span class="symbol">'float32</span>'),</div><div class="line">   ....:                      <span class="string">'D'</span> : <span class="type">np.array</span>([<span class="number">3</span>] * <span class="number">4</span>,dtype=<span class="symbol">'int32</span>'),</div><div class="line">   ....:                      <span class="string">'E'</span> : <span class="type">pd.Categorical</span>([<span class="string">"test"</span>,<span class="string">"train"</span>,<span class="string">"test"</span>,<span class="string">"train"</span>]),</div><div class="line">   ....:                      <span class="string">'F'</span> : '<span class="type">foo</span>' &#125;)</div><div class="line">   ....: </div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">11</span>]: df2</div><div class="line"><span class="keyword">Out</span>[<span class="number">11</span>]: </div><div class="line">     A          B    C  D      E    F</div><div class="line"><span class="number">0</span>  <span class="number">1.0</span> <span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>  <span class="number">1.0</span>  <span class="number">3</span>   test  foo</div><div class="line"><span class="number">1</span>  <span class="number">1.0</span> <span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>  <span class="number">1.0</span>  <span class="number">3</span>  train  foo</div><div class="line"><span class="number">2</span>  <span class="number">1.0</span> <span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>  <span class="number">1.0</span>  <span class="number">3</span>   test  foo</div><div class="line"><span class="number">3</span>  <span class="number">1.0</span> <span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>  <span class="number">1.0</span>  <span class="number">3</span>  train  foo</div></pre></td></tr></table></figure><p>查看不同列的数据类型：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">12</span>]: df2.dtypes</div><div class="line"><span class="keyword">Out</span>[<span class="number">12</span>]: </div><div class="line">A           float64</div><div class="line">B    datetime64[ns]</div><div class="line"><span class="keyword">C</span>           float32</div><div class="line"><span class="keyword">D</span>             int32</div><div class="line"><span class="keyword">E</span>          category</div><div class="line">F            object</div><div class="line">dtype: object</div></pre></td></tr></table></figure><p>如果你正在使用IPython，使用Tab自动补全功能会自动识别所有的属性以及自定义的列，下图中是所有能够被自动识别的属性的一个子集：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">13</span>]: df2.&lt;TAB&gt;</div><div class="line">df2<span class="selector-class">.A</span>                  df2<span class="selector-class">.bool</span></div><div class="line">df2<span class="selector-class">.abs</span>                df2<span class="selector-class">.boxplot</span></div><div class="line">df2<span class="selector-class">.add</span>                df2<span class="selector-class">.C</span></div><div class="line">df2<span class="selector-class">.add_prefix</span>         df2<span class="selector-class">.clip</span></div><div class="line">df2<span class="selector-class">.add_suffix</span>         df2<span class="selector-class">.clip_lower</span></div><div class="line">df2<span class="selector-class">.align</span>              df2<span class="selector-class">.clip_upper</span></div><div class="line">df2<span class="selector-class">.all</span>                df2<span class="selector-class">.columns</span></div><div class="line">df2<span class="selector-class">.any</span>                df2<span class="selector-class">.combine</span></div><div class="line">df2<span class="selector-class">.append</span>             df2<span class="selector-class">.combine_first</span></div><div class="line">df2<span class="selector-class">.apply</span>              df2<span class="selector-class">.compound</span></div><div class="line">df2<span class="selector-class">.applymap</span>           df2<span class="selector-class">.consolidate</span></div><div class="line">df2.D</div></pre></td></tr></table></figure><p>正如你所看的，这里的列<code>A</code>,<code>B</code>,<code>C</code>和<code>D</code>是自动补全的，为了简洁，其余的属性被截断。</p><h2 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h2><p>详情请参阅:<a href="http://pandas.pydata.org/pandas-docs/stable/basics.html#basics" target="_blank" rel="external">Basics section</a></p><p>查看frame中头部和尾部的行：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">14</span>]: df.head()</div><div class="line">Out[<span class="number">14</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span></div><div class="line"></div><div class="line">In [<span class="number">15</span>]: df.tail(<span class="number">3</span>)</div><div class="line">Out[<span class="number">15</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span></div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span>  <span class="number">0.113648</span> -<span class="number">1.478427</span>  <span class="number">0.524988</span></div></pre></td></tr></table></figure><p>显示索引，列和底层numpy数据:</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">16</span>]: df.index</div><div class="line"><span class="symbol">Out</span>[<span class="number">16</span>]: </div><div class="line"><span class="symbol">DatetimeIndex</span>([<span class="string">'2013-01-01'</span>, <span class="string">'2013-01-02'</span>, <span class="string">'2013-01-03'</span>, <span class="string">'2013-01-04'</span>,</div><div class="line">               <span class="string">'2013-01-05'</span>, <span class="string">'2013-01-06'</span>],</div><div class="line">              dtype=<span class="string">'datetime64[ns]'</span>, freq=<span class="string">'D'</span>)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">17</span>]: df.columns</div><div class="line"><span class="symbol">Out</span>[<span class="number">17</span>]: <span class="symbol">Index</span>([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>], dtype=<span class="string">'object'</span>)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">18</span>]: df.values</div><div class="line"><span class="symbol">Out</span>[<span class="number">18</span>]: </div><div class="line">array([[ <span class="number">0.4691</span>, <span class="number">-0.2829</span>, <span class="number">-1.5091</span>, <span class="number">-1.1356</span>],</div><div class="line">       [ <span class="number">1.2121</span>, <span class="number">-0.1732</span>,  <span class="number">0.1192</span>, <span class="number">-1.0442</span>],</div><div class="line">       [<span class="number">-0.8618</span>, <span class="number">-2.1046</span>, <span class="number">-0.4949</span>,  <span class="number">1.0718</span>],</div><div class="line">       [ <span class="number">0.7216</span>, <span class="number">-0.7068</span>, <span class="number">-1.0396</span>,  <span class="number">0.2719</span>],</div><div class="line">       [<span class="number">-0.425</span> ,  <span class="number">0.567</span> ,  <span class="number">0.2762</span>, <span class="number">-1.0874</span>],</div><div class="line">       [<span class="number">-0.6737</span>,  <span class="number">0.1136</span>, <span class="number">-1.4784</span>,  <span class="number">0.525</span> ]])</div></pre></td></tr></table></figure><p><code>describe()</code>函数对于数据的快速统计汇总：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[19]</span>: <span class="selector-tag">df</span><span class="selector-class">.describe</span>()</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[19]</span>: </div><div class="line">              <span class="selector-tag">A</span>         <span class="selector-tag">B</span>         <span class="selector-tag">C</span>         <span class="selector-tag">D</span></div><div class="line"><span class="selector-tag">count</span>  6<span class="selector-class">.000000</span>  6<span class="selector-class">.000000</span>  6<span class="selector-class">.000000</span>  6<span class="selector-class">.000000</span></div><div class="line"><span class="selector-tag">mean</span>   0<span class="selector-class">.073711</span> <span class="selector-tag">-0</span><span class="selector-class">.431125</span> <span class="selector-tag">-0</span><span class="selector-class">.687758</span> <span class="selector-tag">-0</span><span class="selector-class">.233103</span></div><div class="line"><span class="selector-tag">std</span>    0<span class="selector-class">.843157</span>  0<span class="selector-class">.922818</span>  0<span class="selector-class">.779887</span>  0<span class="selector-class">.973118</span></div><div class="line"><span class="selector-tag">min</span>   <span class="selector-tag">-0</span><span class="selector-class">.861849</span> <span class="selector-tag">-2</span><span class="selector-class">.104569</span> <span class="selector-tag">-1</span><span class="selector-class">.509059</span> <span class="selector-tag">-1</span><span class="selector-class">.135632</span></div><div class="line">25%   <span class="selector-tag">-0</span><span class="selector-class">.611510</span> <span class="selector-tag">-0</span><span class="selector-class">.600794</span> <span class="selector-tag">-1</span><span class="selector-class">.368714</span> <span class="selector-tag">-1</span><span class="selector-class">.076610</span></div><div class="line">50%    0<span class="selector-class">.022070</span> <span class="selector-tag">-0</span><span class="selector-class">.228039</span> <span class="selector-tag">-0</span><span class="selector-class">.767252</span> <span class="selector-tag">-0</span><span class="selector-class">.386188</span></div><div class="line">75%    0<span class="selector-class">.658444</span>  0<span class="selector-class">.041933</span> <span class="selector-tag">-0</span><span class="selector-class">.034326</span>  0<span class="selector-class">.461706</span></div><div class="line"><span class="selector-tag">max</span>    1<span class="selector-class">.212112</span>  0<span class="selector-class">.567020</span>  0<span class="selector-class">.276232</span>  1<span class="selector-class">.071804</span></div></pre></td></tr></table></figure><p>对数据的转置：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">20</span>]: df.T</div><div class="line">Out[<span class="number">20</span>]: </div><div class="line">   <span class="number">2013-01-01</span>  <span class="number">2013-01-02</span>  <span class="number">2013-01-03</span>  <span class="number">2013-01-04</span>  <span class="number">2013-01-05</span>  <span class="number">2013-01-06</span></div><div class="line"><span class="keyword">A</span>    <span class="number">0.469112</span>    <span class="number">1.212112</span>   -<span class="number">0.861849</span>    <span class="number">0.721555</span>   -<span class="number">0.424972</span>   -<span class="number">0.673690</span></div><div class="line">B   -<span class="number">0.282863</span>   -<span class="number">0.173215</span>   -<span class="number">2.104569</span>   -<span class="number">0.706771</span>    <span class="number">0.567020</span>    <span class="number">0.113648</span></div><div class="line">C   -<span class="number">1.509059</span>    <span class="number">0.119209</span>   -<span class="number">0.494929</span>   -<span class="number">1.039575</span>    <span class="number">0.276232</span>   -<span class="number">1.478427</span></div><div class="line">D   -<span class="number">1.135632</span>   -<span class="number">1.044236</span>    <span class="number">1.071804</span>    <span class="number">0.271860</span>   -<span class="number">1.087401</span>    <span class="number">0.524988</span></div></pre></td></tr></table></figure><p>按轴进行排序</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">21</span>]: df.sort_index(axis=<span class="number">1</span>, ascending=False)</div><div class="line">Out[<span class="number">21</span>]: </div><div class="line">                   D         C         B         <span class="keyword">A</span></div><div class="line"><span class="number">2013-01-01</span> -<span class="number">1.135632</span> -<span class="number">1.509059</span> -<span class="number">0.282863</span>  <span class="number">0.469112</span></div><div class="line"><span class="number">2013-01-02</span> -<span class="number">1.044236</span>  <span class="number">0.119209</span> -<span class="number">0.173215</span>  <span class="number">1.212112</span></div><div class="line"><span class="number">2013-01-03</span>  <span class="number">1.071804</span> -<span class="number">0.494929</span> -<span class="number">2.104569</span> -<span class="number">0.861849</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.271860</span> -<span class="number">1.039575</span> -<span class="number">0.706771</span>  <span class="number">0.721555</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">1.087401</span>  <span class="number">0.276232</span>  <span class="number">0.567020</span> -<span class="number">0.424972</span></div><div class="line"><span class="number">2013-01-06</span>  <span class="number">0.524988</span> -<span class="number">1.478427</span>  <span class="number">0.113648</span> -<span class="number">0.673690</span></div></pre></td></tr></table></figure><p>按值进行排序</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">22</span>]: df.sort_values(by='B')</div><div class="line">Out[<span class="number">22</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span>  <span class="number">0.113648</span> -<span class="number">1.478427</span>  <span class="number">0.524988</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span></div></pre></td></tr></table></figure><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><blockquote><p><strong>注意：</strong>虽然用于选择和设置的标准的Python/Numpy表达式非常直观，可用于交互式工作，但对于生产代码，我们推荐优化的pandas数据访问方法<code>.at</code>，<code>.iat</code>，<code>.loc</code>，<code>.iloc</code>和<code>.ix</code>。</p></blockquote><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing" target="_blank" rel="external">Indexing and Selecing Data</a>和 <a href="http://pandas.pydata.org/pandas-docs/stable/advanced.html#advanced" target="_blank" rel="external">MultiIndex / Advanced Indexing</a>。</p><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><p>选择一个单独的列，这将会返回一个<code>Series</code>，等同于<code>df.A</code>：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">23</span>]: df['<span class="keyword">A</span>']</div><div class="line">Out[<span class="number">23</span>]: </div><div class="line"><span class="number">2013-01-01</span>    <span class="number">0.469112</span></div><div class="line"><span class="number">2013-01-02</span>    <span class="number">1.212112</span></div><div class="line"><span class="number">2013-01-03</span>   -<span class="number">0.861849</span></div><div class="line"><span class="number">2013-01-04</span>    <span class="number">0.721555</span></div><div class="line"><span class="number">2013-01-05</span>   -<span class="number">0.424972</span></div><div class="line"><span class="number">2013-01-06</span>   -<span class="number">0.673690</span></div><div class="line">Freq: D, Name: <span class="keyword">A</span>, dtype: float64</div></pre></td></tr></table></figure><p>通过<code>[]</code>进行选择，这将会对行进行切片:</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">24</span>]: df[<span class="number">0</span>:<span class="number">3</span>]</div><div class="line">Out[<span class="number">24</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span></div><div class="line"></div><div class="line">In [<span class="number">25</span>]: df['<span class="number">20130102</span>':'<span class="number">20130104</span>']</div><div class="line">Out[<span class="number">25</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div></pre></td></tr></table></figure><h3 id="通过标签选择"><a href="#通过标签选择" class="headerlink" title="通过标签选择"></a>通过标签选择</h3><p>详情请参加<a href="http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-label" target="_blank" rel="external">Selection by Label</a></p><p>使用标签获取横截面</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[26]</span>: <span class="selector-tag">df</span><span class="selector-class">.loc</span><span class="selector-attr">[dates[0]</span>]</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[26]</span>: </div><div class="line"><span class="selector-tag">A</span>    0<span class="selector-class">.469112</span></div><div class="line"><span class="selector-tag">B</span>   <span class="selector-tag">-0</span><span class="selector-class">.282863</span></div><div class="line"><span class="selector-tag">C</span>   <span class="selector-tag">-1</span><span class="selector-class">.509059</span></div><div class="line"><span class="selector-tag">D</span>   <span class="selector-tag">-1</span><span class="selector-class">.135632</span></div><div class="line"><span class="selector-tag">Name</span>: 2013<span class="selector-tag">-01-01</span> 00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span>, <span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><p>通过标签选择多轴</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">27</span>]: df.loc[:,['<span class="keyword">A</span>','B']]</div><div class="line">Out[<span class="number">27</span>]: </div><div class="line">                   <span class="keyword">A</span>         B</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span></div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span>  <span class="number">0.113648</span></div></pre></td></tr></table></figure><p>显示包括两个端点的标签切片：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">28</span>]: df.loc['<span class="number">20130102</span>':'<span class="number">20130104</span>',['<span class="keyword">A</span>','B']]</div><div class="line">Out[<span class="number">28</span>]: </div><div class="line">                   <span class="keyword">A</span>         B</div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span></div></pre></td></tr></table></figure><p>减少返回的对象的尺寸:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[29]</span>: <span class="selector-tag">df</span><span class="selector-class">.loc</span><span class="selector-attr">['20130102',['A','B']</span>]</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[29]</span>: </div><div class="line"><span class="selector-tag">A</span>    1<span class="selector-class">.212112</span></div><div class="line"><span class="selector-tag">B</span>   <span class="selector-tag">-0</span><span class="selector-class">.173215</span></div><div class="line"><span class="selector-tag">Name</span>: 2013<span class="selector-tag">-01-02</span> 00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span>, <span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><p>获得标量值</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">30</span>]: df.loc[dates[<span class="number">0</span>],<span class="string">'A'</span>]</div><div class="line"><span class="symbol">Out</span>[<span class="number">30</span>]: <span class="number">0.46911229990718628</span></div></pre></td></tr></table></figure><p>快速访问一个标量（与上一个方法等价）</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">31</span>]: df.at[dates[<span class="number">0</span>],<span class="string">'A'</span>]</div><div class="line"><span class="symbol">Out</span>[<span class="number">31</span>]: <span class="number">0.46911229990718628</span></div></pre></td></tr></table></figure><h3 id="按位置选择"><a href="#按位置选择" class="headerlink" title="按位置选择"></a>按位置选择</h3><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-integer" target="_blank" rel="external">Selection by Position</a></p><p>通过传入的整数位置来选择：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[32]</span>: <span class="selector-tag">df</span><span class="selector-class">.iloc</span><span class="selector-attr">[3]</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[32]</span>: </div><div class="line"><span class="selector-tag">A</span>    0<span class="selector-class">.721555</span></div><div class="line"><span class="selector-tag">B</span>   <span class="selector-tag">-0</span><span class="selector-class">.706771</span></div><div class="line"><span class="selector-tag">C</span>   <span class="selector-tag">-1</span><span class="selector-class">.039575</span></div><div class="line"><span class="selector-tag">D</span>    0<span class="selector-class">.271860</span></div><div class="line"><span class="selector-tag">Name</span>: 2013<span class="selector-tag">-01-04</span> 00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span>, <span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><p>可以做类似numpy/python的整数切片操作</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[33]</span>: <span class="selector-tag">df</span><span class="selector-class">.iloc</span><span class="selector-attr">[3:5,0:2]</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[33]</span>: </div><div class="line">                   <span class="selector-tag">A</span>         <span class="selector-tag">B</span></div><div class="line">2013<span class="selector-tag">-01-04</span>  0<span class="selector-class">.721555</span> <span class="selector-tag">-0</span><span class="selector-class">.706771</span></div><div class="line">2013<span class="selector-tag">-01-05</span> <span class="selector-tag">-0</span><span class="selector-class">.424972</span>  0<span class="selector-class">.567020</span></div></pre></td></tr></table></figure><p>可以做类似于numpy/python风格的列出指定索引位置的行列列表的操作</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[34]</span>: <span class="selector-tag">df</span><span class="selector-class">.iloc</span><span class="selector-attr">[[1,2,4]</span>,<span class="selector-attr">[0,2]</span>]</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[34]</span>: </div><div class="line">                   <span class="selector-tag">A</span>         <span class="selector-tag">C</span></div><div class="line">2013<span class="selector-tag">-01-02</span>  1<span class="selector-class">.212112</span>  0<span class="selector-class">.119209</span></div><div class="line">2013<span class="selector-tag">-01-03</span> <span class="selector-tag">-0</span><span class="selector-class">.861849</span> <span class="selector-tag">-0</span><span class="selector-class">.494929</span></div><div class="line">2013<span class="selector-tag">-01-05</span> <span class="selector-tag">-0</span><span class="selector-class">.424972</span>  0<span class="selector-class">.276232</span></div></pre></td></tr></table></figure><p>选择具体的行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[35]</span>: <span class="selector-tag">df</span><span class="selector-class">.iloc</span><span class="selector-attr">[1:3,:]</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[35]</span>: </div><div class="line">                   <span class="selector-tag">A</span>         <span class="selector-tag">B</span>         <span class="selector-tag">C</span>         <span class="selector-tag">D</span></div><div class="line">2013<span class="selector-tag">-01-02</span>  1<span class="selector-class">.212112</span> <span class="selector-tag">-0</span><span class="selector-class">.173215</span>  0<span class="selector-class">.119209</span> <span class="selector-tag">-1</span><span class="selector-class">.044236</span></div><div class="line">2013<span class="selector-tag">-01-03</span> <span class="selector-tag">-0</span><span class="selector-class">.861849</span> <span class="selector-tag">-2</span><span class="selector-class">.104569</span> <span class="selector-tag">-0</span><span class="selector-class">.494929</span>  1<span class="selector-class">.071804</span></div></pre></td></tr></table></figure><p>选择具体的列</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">36</span>]: df.iloc[:,<span class="number">1</span>:<span class="number">3</span>]</div><div class="line">Out[<span class="number">36</span>]: </div><div class="line">                   B         C</div><div class="line"><span class="number">2013-01-01</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span></div><div class="line"><span class="number">2013-01-02</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span></div><div class="line"><span class="number">2013-01-04</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span></div><div class="line"><span class="number">2013-01-05</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span></div><div class="line"><span class="number">2013-01-06</span>  <span class="number">0.113648</span> -<span class="number">1.478427</span></div></pre></td></tr></table></figure><p>明确地获取一个值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[37]</span>: <span class="selector-tag">df</span><span class="selector-class">.iloc</span><span class="selector-attr">[1,1]</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[37]</span>: <span class="selector-tag">-0</span><span class="selector-class">.17321464905330858</span></div></pre></td></tr></table></figure><p>快速访问一个标量（等同于上面的方法）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[38]</span>: <span class="selector-tag">df</span><span class="selector-class">.iat</span><span class="selector-attr">[1,1]</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[38]</span>: <span class="selector-tag">-0</span><span class="selector-class">.17321464905330858</span></div></pre></td></tr></table></figure><h3 id="布尔索引操作"><a href="#布尔索引操作" class="headerlink" title="布尔索引操作"></a>布尔索引操作</h3><p>使用单一列的值来选取数据</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">39</span>]: df[df.<span class="keyword">A</span> &gt; <span class="number">0</span>]</div><div class="line">Out[<span class="number">39</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span></div></pre></td></tr></table></figure><p>从DataFrame选取符合布尔判断条件的数据</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">40</span>]: df[df &gt; <span class="number">0</span>]</div><div class="line">Out[<span class="number">40</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span>       NaN       NaN       NaN</div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span>       NaN  <span class="number">0.119209</span>       NaN</div><div class="line"><span class="number">2013-01-03</span>       NaN       NaN       NaN  <span class="number">1.071804</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span>       NaN       NaN  <span class="number">0.271860</span></div><div class="line"><span class="number">2013-01-05</span>       NaN  <span class="number">0.567020</span>  <span class="number">0.276232</span>       NaN</div><div class="line"><span class="number">2013-01-06</span>       NaN  <span class="number">0.113648</span>       NaN  <span class="number">0.524988</span></div></pre></td></tr></table></figure><p>使用<code>isin()</code>方法来过滤：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">41</span>]: df2 = df.copy()</div><div class="line"></div><div class="line">In [<span class="number">42</span>]: df2['E'] = ['one', 'one','two','three','four','three']</div><div class="line"></div><div class="line">In [<span class="number">43</span>]: df2</div><div class="line">Out[<span class="number">43</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D      E</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.469112</span> -<span class="number">0.282863</span> -<span class="number">1.509059</span> -<span class="number">1.135632</span>    one</div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span> -<span class="number">1.044236</span>    one</div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span>    two</div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">0.271860</span>  three</div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span>   four</div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span>  <span class="number">0.113648</span> -<span class="number">1.478427</span>  <span class="number">0.524988</span>  three</div><div class="line"></div><div class="line">In [<span class="number">44</span>]: df2[df2['E'].isin(['two','four'])]</div><div class="line">Out[<span class="number">44</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C         D     E</div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">1.071804</span>   two</div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span>  <span class="number">0.567020</span>  <span class="number">0.276232</span> -<span class="number">1.087401</span>  four</div></pre></td></tr></table></figure><h3 id="设置数据"><a href="#设置数据" class="headerlink" title="设置数据"></a>设置数据</h3><p>设置新列，自动按索引排列数据</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">45</span>]: s1 = pd.Series([<span class="number">1,2,3,4</span>,<span class="number">5</span>,<span class="number">6</span>], index=pd.date_range('<span class="number">20130102</span>', periods=<span class="number">6</span>))</div><div class="line"></div><div class="line">In [<span class="number">46</span>]: s1</div><div class="line">Out[<span class="number">46</span>]: </div><div class="line"><span class="number">2013-01-02</span>    <span class="number">1</span></div><div class="line"><span class="number">2013-01-03</span>    <span class="number">2</span></div><div class="line"><span class="number">2013-01-04</span>    <span class="number">3</span></div><div class="line"><span class="number">2013-01-05</span>    <span class="number">4</span></div><div class="line"><span class="number">2013-01-06</span>    <span class="number">5</span></div><div class="line"><span class="number">2013-01-07</span>    <span class="number">6</span></div><div class="line">Freq: D, dtype: int64</div><div class="line"></div><div class="line">In [<span class="number">47</span>]: df['F'] = s1</div></pre></td></tr></table></figure><p>通过标签来设定数据</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">48</span>]: df.at[dates[<span class="number">0</span>],<span class="string">'A'</span>] = <span class="number">0</span></div></pre></td></tr></table></figure><p>通过位置索引来设定数据</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">In <span class="string">[49]</span>: df.iat<span class="string">[0,1]</span> = <span class="number">0</span></div></pre></td></tr></table></figure><p>通过分配一个numpy数组来设定数据</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">50</span>]: df.loc[:,<span class="string">'D'</span>] = np.array([<span class="number">5</span>] * len(df))</div></pre></td></tr></table></figure><p>之前操作的结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[51]</span>: <span class="selector-tag">df</span></div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[51]</span>: </div><div class="line">                   <span class="selector-tag">A</span>         <span class="selector-tag">B</span>         <span class="selector-tag">C</span>  <span class="selector-tag">D</span>    <span class="selector-tag">F</span></div><div class="line">2013<span class="selector-tag">-01-01</span>  0<span class="selector-class">.000000</span>  0<span class="selector-class">.000000</span> <span class="selector-tag">-1</span><span class="selector-class">.509059</span>  5  <span class="selector-tag">NaN</span></div><div class="line">2013<span class="selector-tag">-01-02</span>  1<span class="selector-class">.212112</span> <span class="selector-tag">-0</span><span class="selector-class">.173215</span>  0<span class="selector-class">.119209</span>  5  1<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-03</span> <span class="selector-tag">-0</span><span class="selector-class">.861849</span> <span class="selector-tag">-2</span><span class="selector-class">.104569</span> <span class="selector-tag">-0</span><span class="selector-class">.494929</span>  5  2<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-04</span>  0<span class="selector-class">.721555</span> <span class="selector-tag">-0</span><span class="selector-class">.706771</span> <span class="selector-tag">-1</span><span class="selector-class">.039575</span>  5  3<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-05</span> <span class="selector-tag">-0</span><span class="selector-class">.424972</span>  0<span class="selector-class">.567020</span>  0<span class="selector-class">.276232</span>  5  4<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-06</span> <span class="selector-tag">-0</span><span class="selector-class">.673690</span>  0<span class="selector-class">.113648</span> <span class="selector-tag">-1</span><span class="selector-class">.478427</span>  5  5<span class="selector-class">.0</span></div></pre></td></tr></table></figure><p>带有<code>where</code>操作的设值</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">52</span>]: df2 = df.copy()</div><div class="line"></div><div class="line">In [<span class="number">53</span>]: df2[df2 &gt; <span class="number">0</span>] = -df2</div><div class="line"></div><div class="line">In [<span class="number">54</span>]: df2</div><div class="line">Out[<span class="number">54</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C  D    F</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.000000</span>  <span class="number">0.000000</span> -<span class="number">1.509059</span> -<span class="number">5</span>  NaN</div><div class="line"><span class="number">2013-01-02</span> -<span class="number">1.212112</span> -<span class="number">0.173215</span> -<span class="number">0.119209</span> -<span class="number">5</span> -<span class="number">1</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span> -<span class="number">5</span> -<span class="number">2</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-04</span> -<span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span> -<span class="number">5</span> -<span class="number">3</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-05</span> -<span class="number">0.424972</span> -<span class="number">0.567020</span> -<span class="number">0.276232</span> -<span class="number">5</span> -<span class="number">4</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-06</span> -<span class="number">0.673690</span> -<span class="number">0.113648</span> -<span class="number">1.478427</span> -<span class="number">5</span> -<span class="number">5</span>.<span class="number">0</span></div></pre></td></tr></table></figure><h2 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h2><p>pandas主要使用<code>np.nan</code>来代表缺失数据。这些值将默认不会包含在计算中，详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/missing_data.html#missing-data" target="_blank" rel="external">Missing Data section</a></p><p>Reindexing允许您更改/添加/删除指定轴上的索引。这将返回数据的副本。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">55</span>]: df1 = df.reindex(index=dates[<span class="number">0</span>:<span class="number">4</span>], columns=list(df.columns) + ['E'])</div><div class="line"></div><div class="line">In [<span class="number">56</span>]: df1.loc[dates[<span class="number">0</span>]:dates[<span class="number">1</span>],'E'] = <span class="number">1</span></div><div class="line"></div><div class="line">In [<span class="number">57</span>]: df1</div><div class="line">Out[<span class="number">57</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C  D    F    E</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.000000</span>  <span class="number">0.000000</span> -<span class="number">1.509059</span>  <span class="number">5</span>  NaN  <span class="number">1</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span>  <span class="number">5</span>  <span class="number">1</span>.<span class="number">0</span>  <span class="number">1</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">5</span>  <span class="number">2</span>.<span class="number">0</span>  NaN</div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">5</span>  <span class="number">3</span>.<span class="number">0</span>  NaN</div></pre></td></tr></table></figure><p>删除所有具有缺失值的数据</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">58</span>]: df1.dropna(how=<span class="string">'any'</span>)</div><div class="line"><span class="keyword">Out</span>[<span class="number">58</span>]: </div><div class="line">                   A         B         <span class="keyword">C</span>  <span class="keyword">D</span>    F    <span class="keyword">E</span></div><div class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="number">1.212112</span> <span class="number">-0.173215</span>  <span class="number">0.119209</span>  <span class="number">5</span>  <span class="number">1.0</span>  <span class="number">1.0</span></div></pre></td></tr></table></figure><p>填充缺失数据</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">59</span>]: df1.fillna(value=<span class="number">5</span>)</div><div class="line">Out[<span class="number">59</span>]: </div><div class="line">                   <span class="keyword">A</span>         B         C  D    F    E</div><div class="line"><span class="number">2013-01-01</span>  <span class="number">0.000000</span>  <span class="number">0.000000</span> -<span class="number">1.509059</span>  <span class="number">5</span>  <span class="number">5</span>.<span class="number">0</span>  <span class="number">1</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-02</span>  <span class="number">1.212112</span> -<span class="number">0.173215</span>  <span class="number">0.119209</span>  <span class="number">5</span>  <span class="number">1</span>.<span class="number">0</span>  <span class="number">1</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-03</span> -<span class="number">0.861849</span> -<span class="number">2.104569</span> -<span class="number">0.494929</span>  <span class="number">5</span>  <span class="number">2</span>.<span class="number">0</span>  <span class="number">5</span>.<span class="number">0</span></div><div class="line"><span class="number">2013-01-04</span>  <span class="number">0.721555</span> -<span class="number">0.706771</span> -<span class="number">1.039575</span>  <span class="number">5</span>  <span class="number">3</span>.<span class="number">0</span>  <span class="number">5</span>.<span class="number">0</span></div></pre></td></tr></table></figure><p>获取值为nan的布尔值掩码</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">60</span>]: pd.isna(df1)</div><div class="line"><span class="keyword">Out</span>[<span class="number">60</span>]: </div><div class="line">                A      B      <span class="keyword">C</span>      <span class="keyword">D</span>      F      <span class="keyword">E</span></div><div class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-01</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>   <span class="keyword">True</span>  <span class="keyword">False</span></div><div class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-02</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span></div><div class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-03</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>   <span class="keyword">True</span></div><div class="line"><span class="number">2013</span><span class="number">-01</span><span class="number">-04</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>  <span class="keyword">False</span>   <span class="keyword">True</span></div></pre></td></tr></table></figure><h2 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h2><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/basics.html#basics-binop" target="_blank" rel="external">Basic section on Binary Ops</a></p><h3 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h3><p>一般操作不包括丢失的数据。</p><p>执行描述性统计操作(沿数值方向求均值)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[61]</span>: <span class="selector-tag">df</span><span class="selector-class">.mean</span>()</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[61]</span>: </div><div class="line"><span class="selector-tag">A</span>   <span class="selector-tag">-0</span><span class="selector-class">.004474</span></div><div class="line"><span class="selector-tag">B</span>   <span class="selector-tag">-0</span><span class="selector-class">.383981</span></div><div class="line"><span class="selector-tag">C</span>   <span class="selector-tag">-0</span><span class="selector-class">.687758</span></div><div class="line"><span class="selector-tag">D</span>    5<span class="selector-class">.000000</span></div><div class="line"><span class="selector-tag">F</span>    3<span class="selector-class">.000000</span></div><div class="line"><span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><p>在另一个轴上做相同的操作(沿水平方向求均值)</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">62</span>]: df.mean(<span class="number">1</span>)</div><div class="line">Out[<span class="number">62</span>]: </div><div class="line"><span class="number">2013-01-01</span>    <span class="number">0.872735</span></div><div class="line"><span class="number">2013-01-02</span>    <span class="number">1.431621</span></div><div class="line"><span class="number">2013-01-03</span>    <span class="number">0.707731</span></div><div class="line"><span class="number">2013-01-04</span>    <span class="number">1.395042</span></div><div class="line"><span class="number">2013-01-05</span>    <span class="number">1.883656</span></div><div class="line"><span class="number">2013-01-06</span>    <span class="number">1.592306</span></div><div class="line">Freq: D, dtype: float64</div></pre></td></tr></table></figure><p>使用具有不同维度且需要对齐的对象进行操作。另外，pandas会沿指定的尺寸自动广播。</p><blockquote><p>注意：1-np.nan 输出结果为NaN</p></blockquote><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">63</span>]: s = pd.Series([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,np.nan,<span class="number">6</span>,<span class="number">8</span>], index=dates).shift(<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">64</span>]: s</div><div class="line"><span class="keyword">Out</span>[<span class="number">64</span>]: </div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">01</span>    <span class="meta">NaN</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>    <span class="meta">NaN</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">03</span>    <span class="number">1.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">04</span>    <span class="number">3.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">05</span>    <span class="number">5.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">06</span>    <span class="meta">NaN</span></div><div class="line"><span class="symbol">Freq:</span> D, dtype: <span class="meta">float64</span></div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">65</span>]: df.sub(s, axis=<span class="string">'index'</span>)</div><div class="line"><span class="keyword">Out</span>[<span class="number">65</span>]: </div><div class="line">                   A         B         C    D    F</div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">01</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>  <span class="meta">NaN</span>  <span class="meta">NaN</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">02</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>  <span class="meta">NaN</span>  <span class="meta">NaN</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">03</span> -<span class="number">1.861849</span> -<span class="number">3.104569</span> -<span class="number">1.494929</span>  <span class="number">4.0</span>  <span class="number">1.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">04</span> -<span class="number">2.278445</span> -<span class="number">3.706771</span> -<span class="number">4.039575</span>  <span class="number">2.0</span>  <span class="number">0.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">05</span> -<span class="number">5.424972</span> -<span class="number">4.432980</span> -<span class="number">4.723768</span>  <span class="number">0.0</span> -<span class="number">1.0</span></div><div class="line"><span class="number">2013</span>-<span class="number">01</span>-<span class="number">06</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>       <span class="meta">NaN</span>  <span class="meta">NaN</span>  <span class="meta">NaN</span></div></pre></td></tr></table></figure><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>将函数应用于数据</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># 累加操作</div><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[66]</span>: <span class="selector-tag">df</span><span class="selector-class">.apply</span>(<span class="selector-tag">np</span><span class="selector-class">.cumsum</span>)</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[66]</span>: </div><div class="line">                   <span class="selector-tag">A</span>         <span class="selector-tag">B</span>         <span class="selector-tag">C</span>   <span class="selector-tag">D</span>     <span class="selector-tag">F</span></div><div class="line">2013<span class="selector-tag">-01-01</span>  0<span class="selector-class">.000000</span>  0<span class="selector-class">.000000</span> <span class="selector-tag">-1</span><span class="selector-class">.509059</span>   5   <span class="selector-tag">NaN</span></div><div class="line">2013<span class="selector-tag">-01-02</span>  1<span class="selector-class">.212112</span> <span class="selector-tag">-0</span><span class="selector-class">.173215</span> <span class="selector-tag">-1</span><span class="selector-class">.389850</span>  10   1<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-03</span>  0<span class="selector-class">.350263</span> <span class="selector-tag">-2</span><span class="selector-class">.277784</span> <span class="selector-tag">-1</span><span class="selector-class">.884779</span>  15   3<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-04</span>  1<span class="selector-class">.071818</span> <span class="selector-tag">-2</span><span class="selector-class">.984555</span> <span class="selector-tag">-2</span><span class="selector-class">.924354</span>  20   6<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-05</span>  0<span class="selector-class">.646846</span> <span class="selector-tag">-2</span><span class="selector-class">.417535</span> <span class="selector-tag">-2</span><span class="selector-class">.648122</span>  25  10<span class="selector-class">.0</span></div><div class="line">2013<span class="selector-tag">-01-06</span> <span class="selector-tag">-0</span><span class="selector-class">.026844</span> <span class="selector-tag">-2</span><span class="selector-class">.303886</span> <span class="selector-tag">-4</span><span class="selector-class">.126549</span>  30  15<span class="selector-class">.0</span></div><div class="line"></div><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[67]</span>: <span class="selector-tag">df</span><span class="selector-class">.apply</span>(<span class="selector-tag">lambda</span> <span class="selector-tag">x</span>: <span class="selector-tag">x</span><span class="selector-class">.max</span>() <span class="selector-tag">-</span> <span class="selector-tag">x</span><span class="selector-class">.min</span>())</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[67]</span>: </div><div class="line"><span class="selector-tag">A</span>    2<span class="selector-class">.073961</span></div><div class="line"><span class="selector-tag">B</span>    2<span class="selector-class">.671590</span></div><div class="line"><span class="selector-tag">C</span>    1<span class="selector-class">.785291</span></div><div class="line"><span class="selector-tag">D</span>    0<span class="selector-class">.000000</span></div><div class="line"><span class="selector-tag">F</span>    4<span class="selector-class">.000000</span></div><div class="line"><span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/basics.html#basics-discretization" target="_blank" rel="external">Histogramming and Discretization</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">68</span>]: s = pd.Series(np.random.randint(<span class="number">0</span>, <span class="number">7</span>, size=<span class="number">10</span>))</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">69</span>]: s</div><div class="line"><span class="keyword">Out</span>[<span class="number">69</span>]: </div><div class="line"><span class="number">0</span>    <span class="number">4</span></div><div class="line"><span class="number">1</span>    <span class="number">2</span></div><div class="line"><span class="number">2</span>    <span class="number">1</span></div><div class="line"><span class="number">3</span>    <span class="number">2</span></div><div class="line"><span class="number">4</span>    <span class="number">6</span></div><div class="line"><span class="number">5</span>    <span class="number">4</span></div><div class="line"><span class="number">6</span>    <span class="number">4</span></div><div class="line"><span class="number">7</span>    <span class="number">6</span></div><div class="line"><span class="number">8</span>    <span class="number">4</span></div><div class="line"><span class="number">9</span>    <span class="number">4</span></div><div class="line"><span class="symbol">dtype:</span> int64</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">70</span>]: s.value_counts()</div><div class="line"><span class="keyword">Out</span>[<span class="number">70</span>]: </div><div class="line"><span class="number">4</span>    <span class="number">5</span></div><div class="line"><span class="number">6</span>    <span class="number">2</span></div><div class="line"><span class="number">2</span>    <span class="number">2</span></div><div class="line"><span class="number">1</span>    <span class="number">1</span></div><div class="line"><span class="symbol">dtype:</span> int64</div></pre></td></tr></table></figure><h3 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h3><p>Series对象在其str属性中配备了一组字符串处理方法，可以很容易的应用到数组中的每个元素，如下段代码所示。更多详情请参考：<a href="http://pandas.pydata.org/pandas-docs/stable/text.html#text-string-methods" target="_blank" rel="external">Vectorized String Methods</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">71</span>]: s = pd.Series([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'Aaba'</span>, <span class="string">'Baca'</span>, np<span class="selector-class">.nan</span>, <span class="string">'CABA'</span>, <span class="string">'dog'</span>, <span class="string">'cat'</span>])</div><div class="line"></div><div class="line">In [<span class="number">72</span>]: s<span class="selector-class">.str</span><span class="selector-class">.lower</span>()</div><div class="line">Out[<span class="number">72</span>]: </div><div class="line"><span class="number">0</span>       <span class="selector-tag">a</span></div><div class="line"><span class="number">1</span>       <span class="selector-tag">b</span></div><div class="line"><span class="number">2</span>       c</div><div class="line"><span class="number">3</span>    aaba</div><div class="line"><span class="number">4</span>    baca</div><div class="line"><span class="number">5</span>     NaN</div><div class="line"><span class="number">6</span>    caba</div><div class="line"><span class="number">7</span>     dog</div><div class="line"><span class="number">8</span>     cat</div><div class="line">dtype: object</div></pre></td></tr></table></figure><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><h3 id="Concat"><a href="#Concat" class="headerlink" title="Concat"></a>Concat</h3><p>Pandas提供了大量的方法能够轻松的对Series，DataFrame和Panel对象进行各种符合各种逻辑关系的合并操作。</p><p>具体请参阅：<a href="http://pandas.pydata.org/pandas-docs/stable/merging.html#merging" target="_blank" rel="external">Merging section</a></p><p>通过使用<code>concat()</code>来将pandas对象链接起来：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">73</span>]: df = pd.DataFrame(np.random.randn(<span class="number">10</span>, <span class="number">4</span>))</div><div class="line"></div><div class="line">In [<span class="number">74</span>]: df</div><div class="line">Out[<span class="number">74</span>]: </div><div class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span>         <span class="number">3</span></div><div class="line"><span class="number">0</span> -<span class="number">0.548702</span>  <span class="number">1.467327</span> -<span class="number">1.015962</span> -<span class="number">0.483075</span></div><div class="line"><span class="number">1</span>  <span class="number">1.637550</span> -<span class="number">1.217659</span> -<span class="number">0.291519</span> -<span class="number">1.745505</span></div><div class="line"><span class="number">2</span> -<span class="number">0.263952</span>  <span class="number">0.991460</span> -<span class="number">0.919069</span>  <span class="number">0.266046</span></div><div class="line"><span class="number">3</span> -<span class="number">0.709661</span>  <span class="number">1.669052</span>  <span class="number">1.037882</span> -<span class="number">1.705775</span></div><div class="line"><span class="number">4</span> -<span class="number">0.919854</span> -<span class="number">0.042379</span>  <span class="number">1.247642</span> -<span class="number">0.009920</span></div><div class="line"><span class="number">5</span>  <span class="number">0.290213</span>  <span class="number">0.495767</span>  <span class="number">0.362949</span>  <span class="number">1.548106</span></div><div class="line"><span class="number">6</span> -<span class="number">1.131345</span> -<span class="number">0.089329</span>  <span class="number">0.337863</span> -<span class="number">0.945867</span></div><div class="line"><span class="number">7</span> -<span class="number">0.932132</span>  <span class="number">1.956030</span>  <span class="number">0.017587</span> -<span class="number">0.016692</span></div><div class="line"><span class="number">8</span> -<span class="number">0.575247</span>  <span class="number">0.254161</span> -<span class="number">1.143704</span>  <span class="number">0.215897</span></div><div class="line"><span class="number">9</span>  <span class="number">1.193555</span> -<span class="number">0.077118</span> -<span class="number">0.408530</span> -<span class="number">0.862495</span></div><div class="line"></div><div class="line"># break it into pieces</div><div class="line">In [<span class="number">75</span>]: pieces = [df[:<span class="number">3</span>], df[<span class="number">3</span>:<span class="number">7</span>], df[<span class="number">7</span>:]]</div><div class="line"></div><div class="line">In [<span class="number">76</span>]: pd.concat(pieces)</div><div class="line">Out[<span class="number">76</span>]: </div><div class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span>         <span class="number">3</span></div><div class="line"><span class="number">0</span> -<span class="number">0.548702</span>  <span class="number">1.467327</span> -<span class="number">1.015962</span> -<span class="number">0.483075</span></div><div class="line"><span class="number">1</span>  <span class="number">1.637550</span> -<span class="number">1.217659</span> -<span class="number">0.291519</span> -<span class="number">1.745505</span></div><div class="line"><span class="number">2</span> -<span class="number">0.263952</span>  <span class="number">0.991460</span> -<span class="number">0.919069</span>  <span class="number">0.266046</span></div><div class="line"><span class="number">3</span> -<span class="number">0.709661</span>  <span class="number">1.669052</span>  <span class="number">1.037882</span> -<span class="number">1.705775</span></div><div class="line"><span class="number">4</span> -<span class="number">0.919854</span> -<span class="number">0.042379</span>  <span class="number">1.247642</span> -<span class="number">0.009920</span></div><div class="line"><span class="number">5</span>  <span class="number">0.290213</span>  <span class="number">0.495767</span>  <span class="number">0.362949</span>  <span class="number">1.548106</span></div><div class="line"><span class="number">6</span> -<span class="number">1.131345</span> -<span class="number">0.089329</span>  <span class="number">0.337863</span> -<span class="number">0.945867</span></div><div class="line"><span class="number">7</span> -<span class="number">0.932132</span>  <span class="number">1.956030</span>  <span class="number">0.017587</span> -<span class="number">0.016692</span></div><div class="line"><span class="number">8</span> -<span class="number">0.575247</span>  <span class="number">0.254161</span> -<span class="number">1.143704</span>  <span class="number">0.215897</span></div><div class="line"><span class="number">9</span>  <span class="number">1.193555</span> -<span class="number">0.077118</span> -<span class="number">0.408530</span> -<span class="number">0.862495</span></div></pre></td></tr></table></figure><h3 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h3><p>类似于SQL类型的合并</p><p>具体请参阅：<a href="http://pandas.pydata.org/pandas-docs/stable/merging.html#merging-join" target="_blank" rel="external">Database style joining</a></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">77</span>]: left = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'foo'</span>], <span class="string">'lval'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">78</span>]: right = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'foo'</span>], <span class="string">'rval'</span>: [<span class="number">4</span>, <span class="number">5</span>]&#125;)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">79</span>]: left</div><div class="line"><span class="symbol">Out</span>[<span class="number">79</span>]: </div><div class="line">   key  lval</div><div class="line"><span class="number">0</span>  foo     <span class="number">1</span></div><div class="line"><span class="number">1</span>  foo     <span class="number">2</span></div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">80</span>]: right</div><div class="line"><span class="symbol">Out</span>[<span class="number">80</span>]: </div><div class="line">   key  rval</div><div class="line"><span class="number">0</span>  foo     <span class="number">4</span></div><div class="line"><span class="number">1</span>  foo     <span class="number">5</span></div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">81</span>]: pd.merge(left, right, on=<span class="string">'key'</span>)</div><div class="line"><span class="symbol">Out</span>[<span class="number">81</span>]: </div><div class="line">   key  lval  rval</div><div class="line"><span class="number">0</span>  foo     <span class="number">1</span>     <span class="number">4</span></div><div class="line"><span class="number">1</span>  foo     <span class="number">1</span>     <span class="number">5</span></div><div class="line"><span class="number">2</span>  foo     <span class="number">2</span>     <span class="number">4</span></div><div class="line"><span class="number">3</span>  foo     <span class="number">2</span>     <span class="number">5</span></div></pre></td></tr></table></figure><p>另一个可以给出的例子是：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">82</span>]: left = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'bar'</span>], <span class="string">'lval'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">83</span>]: right = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'bar'</span>], <span class="string">'rval'</span>: [<span class="number">4</span>, <span class="number">5</span>]&#125;)</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">84</span>]: left</div><div class="line"><span class="symbol">Out</span>[<span class="number">84</span>]: </div><div class="line">   key  lval</div><div class="line"><span class="number">0</span>  foo     <span class="number">1</span></div><div class="line"><span class="number">1</span>  bar     <span class="number">2</span></div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">85</span>]: right</div><div class="line"><span class="symbol">Out</span>[<span class="number">85</span>]: </div><div class="line">   key  rval</div><div class="line"><span class="number">0</span>  foo     <span class="number">4</span></div><div class="line"><span class="number">1</span>  bar     <span class="number">5</span></div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">86</span>]: pd.merge(left, right, on=<span class="string">'key'</span>)</div><div class="line"><span class="symbol">Out</span>[<span class="number">86</span>]: </div><div class="line">   key  lval  rval</div><div class="line"><span class="number">0</span>  foo     <span class="number">1</span>     <span class="number">4</span></div><div class="line"><span class="number">1</span>  bar     <span class="number">2</span>     <span class="number">5</span></div></pre></td></tr></table></figure><h3 id="Append"><a href="#Append" class="headerlink" title="Append"></a>Append</h3><p>将一行连接到一个DataFrame上。</p><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/merging.html#merging-concatenation" target="_blank" rel="external">Appending</a></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">87</span>]: df = pd.DataFrame(np.random.randn(<span class="number">8</span>, <span class="number">4</span>), columns=['<span class="keyword">A</span>','B','C','D'])</div><div class="line"></div><div class="line">In [<span class="number">88</span>]: df</div><div class="line">Out[<span class="number">88</span>]: </div><div class="line">          <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">0</span>  <span class="number">1.346061</span>  <span class="number">1.511763</span>  <span class="number">1.627081</span> -<span class="number">0.990582</span></div><div class="line"><span class="number">1</span> -<span class="number">0.441652</span>  <span class="number">1.211526</span>  <span class="number">0.268520</span>  <span class="number">0.024580</span></div><div class="line"><span class="number">2</span> -<span class="number">1.577585</span>  <span class="number">0.396823</span> -<span class="number">0.105381</span> -<span class="number">0.532532</span></div><div class="line"><span class="number">3</span>  <span class="number">1.453749</span>  <span class="number">1.208843</span> -<span class="number">0.080952</span> -<span class="number">0.264610</span></div><div class="line"><span class="number">4</span> -<span class="number">0.727965</span> -<span class="number">0.589346</span>  <span class="number">0.339969</span> -<span class="number">0.693205</span></div><div class="line"><span class="number">5</span> -<span class="number">0.339355</span>  <span class="number">0.593616</span>  <span class="number">0.884345</span>  <span class="number">1.591431</span></div><div class="line"><span class="number">6</span>  <span class="number">0.141809</span>  <span class="number">0.220390</span>  <span class="number">0.435589</span>  <span class="number">0.192451</span></div><div class="line"><span class="number">7</span> -<span class="number">0.096701</span>  <span class="number">0.803351</span>  <span class="number">1.715071</span> -<span class="number">0.708758</span></div><div class="line"></div><div class="line">In [<span class="number">89</span>]: s = df.iloc[<span class="number">3</span>]</div><div class="line"></div><div class="line">In [<span class="number">90</span>]: df.append(s, ignore_index=True)</div><div class="line">Out[<span class="number">90</span>]: </div><div class="line">          <span class="keyword">A</span>         B         C         D</div><div class="line"><span class="number">0</span>  <span class="number">1.346061</span>  <span class="number">1.511763</span>  <span class="number">1.627081</span> -<span class="number">0.990582</span></div><div class="line"><span class="number">1</span> -<span class="number">0.441652</span>  <span class="number">1.211526</span>  <span class="number">0.268520</span>  <span class="number">0.024580</span></div><div class="line"><span class="number">2</span> -<span class="number">1.577585</span>  <span class="number">0.396823</span> -<span class="number">0.105381</span> -<span class="number">0.532532</span></div><div class="line"><span class="number">3</span>  <span class="number">1.453749</span>  <span class="number">1.208843</span> -<span class="number">0.080952</span> -<span class="number">0.264610</span></div><div class="line"><span class="number">4</span> -<span class="number">0.727965</span> -<span class="number">0.589346</span>  <span class="number">0.339969</span> -<span class="number">0.693205</span></div><div class="line"><span class="number">5</span> -<span class="number">0.339355</span>  <span class="number">0.593616</span>  <span class="number">0.884345</span>  <span class="number">1.591431</span></div><div class="line"><span class="number">6</span>  <span class="number">0.141809</span>  <span class="number">0.220390</span>  <span class="number">0.435589</span>  <span class="number">0.192451</span></div><div class="line"><span class="number">7</span> -<span class="number">0.096701</span>  <span class="number">0.803351</span>  <span class="number">1.715071</span> -<span class="number">0.708758</span></div><div class="line"><span class="number">8</span>  <span class="number">1.453749</span>  <span class="number">1.208843</span> -<span class="number">0.080952</span> -<span class="number">0.264610</span></div></pre></td></tr></table></figure><h2 id="分组（Grouping）"><a href="#分组（Grouping）" class="headerlink" title="分组（Grouping）"></a>分组（Grouping）</h2><p>对于”group by”操作，我们通常是指以下一个或多个操作步骤：</p><ul><li><strong>（Splitting）</strong>按照一些规则将数据分为不同的组；</li><li><strong>（Applying）</strong>对于每组数据分别执行一个函数；</li><li><strong>（Combining）</strong>将结果组合到一个数据结构中；</li></ul><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/groupby.html#groupby" target="_blank" rel="external">Grouping section</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">91</span>]: df = pd.DataFrame(&#123;<span class="string">'A'</span> : [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>,</div><div class="line">   ....:                           <span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'foo'</span>, <span class="string">'foo'</span>],</div><div class="line">   ....:                    <span class="string">'B'</span> : [<span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>,</div><div class="line">   ....:                           <span class="string">'two'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'three'</span>],</div><div class="line">   ....:                    <span class="string">'C'</span> : np<span class="selector-class">.random</span><span class="selector-class">.randn</span>(<span class="number">8</span>),</div><div class="line">   ....:                    <span class="string">'D'</span> : np<span class="selector-class">.random</span><span class="selector-class">.randn</span>(<span class="number">8</span>)&#125;)</div><div class="line">   ....: </div><div class="line"></div><div class="line">In [<span class="number">92</span>]: df</div><div class="line">Out[<span class="number">92</span>]: </div><div class="line">     A      B         C         D</div><div class="line"><span class="number">0</span>  foo    one -<span class="number">1.202872</span> -<span class="number">0.055224</span></div><div class="line"><span class="number">1</span>  bar    one -<span class="number">1.814470</span>  <span class="number">2.395985</span></div><div class="line"><span class="number">2</span>  foo    two  <span class="number">1.018601</span>  <span class="number">1.552825</span></div><div class="line"><span class="number">3</span>  bar  three -<span class="number">0.595447</span>  <span class="number">0.166599</span></div><div class="line"><span class="number">4</span>  foo    two  <span class="number">1.395433</span>  <span class="number">0.047609</span></div><div class="line"><span class="number">5</span>  bar    two -<span class="number">0.392670</span> -<span class="number">0.136473</span></div><div class="line"><span class="number">6</span>  foo    one  <span class="number">0.007207</span> -<span class="number">0.561757</span></div><div class="line"><span class="number">7</span>  foo  three  <span class="number">1.928123</span> -<span class="number">1.623033</span></div></pre></td></tr></table></figure><p>分组，然后将函数总和<code>sum</code>应用于结果组。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">93</span>]: df.groupby('<span class="keyword">A</span>').sum()</div><div class="line">Out[<span class="number">93</span>]: </div><div class="line">            C        D</div><div class="line"><span class="keyword">A</span>                     </div><div class="line">bar -<span class="number">2.802588</span>  <span class="number">2.42611</span></div><div class="line">foo  <span class="number">3.146492</span> -<span class="number">0.63958</span></div></pre></td></tr></table></figure><p>按多列分组会形成一个分层索引，然后我们应用这个函数。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[94]</span>: <span class="selector-tag">df</span><span class="selector-class">.groupby</span>(<span class="selector-attr">['A','B']</span>)<span class="selector-class">.sum</span>()</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[94]</span>: </div><div class="line">                  <span class="selector-tag">C</span>         <span class="selector-tag">D</span></div><div class="line"><span class="selector-tag">A</span>   <span class="selector-tag">B</span>                        </div><div class="line"><span class="selector-tag">bar</span> <span class="selector-tag">one</span>   <span class="selector-tag">-1</span><span class="selector-class">.814470</span>  2<span class="selector-class">.395985</span></div><div class="line">    <span class="selector-tag">three</span> <span class="selector-tag">-0</span><span class="selector-class">.595447</span>  0<span class="selector-class">.166599</span></div><div class="line">    <span class="selector-tag">two</span>   <span class="selector-tag">-0</span><span class="selector-class">.392670</span> <span class="selector-tag">-0</span><span class="selector-class">.136473</span></div><div class="line"><span class="selector-tag">foo</span> <span class="selector-tag">one</span>   <span class="selector-tag">-1</span><span class="selector-class">.195665</span> <span class="selector-tag">-0</span><span class="selector-class">.616981</span></div><div class="line">    <span class="selector-tag">three</span>  1<span class="selector-class">.928123</span> <span class="selector-tag">-1</span><span class="selector-class">.623033</span></div><div class="line">    <span class="selector-tag">two</span>    2<span class="selector-class">.414034</span>  1<span class="selector-class">.600434</span></div></pre></td></tr></table></figure><h2 id="Reshaping"><a href="#Reshaping" class="headerlink" title="Reshaping"></a>Reshaping</h2><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/advanced.html#advanced-hierarchical" target="_blank" rel="external">Hierarchical Indexing</a>和<a href="http://pandas.pydata.org/pandas-docs/stable/reshaping.html#reshaping-stacking" target="_blank" rel="external">Reshaping</a>。</p><h3 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">95</span>]: tuples = list(zip(*[[<span class="string">'bar'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>, <span class="string">'baz'</span>,</div><div class="line">   ....:                      <span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'qux'</span>, <span class="string">'qux'</span>],</div><div class="line">   ....:                     [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>,</div><div class="line">   ....:                      <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>]]))</div><div class="line">   ....: </div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">96</span>]: index = pd.<span class="symbol">MultiIndex</span>.from_tuples(tuples, names=[<span class="string">'first'</span>, <span class="string">'second'</span>])</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">97</span>]: df = pd.<span class="symbol">DataFrame</span>(np.random.randn(<span class="number">8</span>, <span class="number">2</span>), index=index, columns=[<span class="string">'A'</span>, <span class="string">'B'</span>])</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">98</span>]: df2 = df[:<span class="number">4</span>]</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">99</span>]: df2</div><div class="line"><span class="symbol">Out</span>[<span class="number">99</span>]: </div><div class="line">                     <span class="symbol">A</span>         <span class="symbol">B</span></div><div class="line">first second                    </div><div class="line">bar   one     <span class="number">0.029399</span> <span class="number">-0.542108</span></div><div class="line">      two     <span class="number">0.282696</span> <span class="number">-0.087302</span></div><div class="line">baz   one    <span class="number">-1.575170</span>  <span class="number">1.771208</span></div><div class="line">      two     <span class="number">0.816482</span>  <span class="number">1.100230</span></div></pre></td></tr></table></figure><p><code>stack()</code>方法“压缩”了DataFrame列中的级别。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">100</span>]: stacked = df2.stack()</div><div class="line"></div><div class="line">In [<span class="number">101</span>]: stacked</div><div class="line">Out[<span class="number">101</span>]: </div><div class="line">first  second   </div><div class="line">bar    one     <span class="keyword">A</span>    <span class="number">0.029399</span></div><div class="line">               B   -<span class="number">0.542108</span></div><div class="line">       two     <span class="keyword">A</span>    <span class="number">0.282696</span></div><div class="line">               B   -<span class="number">0.087302</span></div><div class="line">baz    one     <span class="keyword">A</span>   -<span class="number">1.575170</span></div><div class="line">               B    <span class="number">1.771208</span></div><div class="line">       two     <span class="keyword">A</span>    <span class="number">0.816482</span></div><div class="line">               B    <span class="number">1.100230</span></div><div class="line">dtype: float64</div></pre></td></tr></table></figure><p>对于“堆叠的(stacked)”DataFrame或Series（以MultiIndex为索引），<code>stack()</code>的反向操作是<code>unstack()</code>，默认情况下，它将卸载<strong>最后一层</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[102]</span>: <span class="selector-tag">stacked</span><span class="selector-class">.unstack</span>()</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[102]</span>: </div><div class="line">                     <span class="selector-tag">A</span>         <span class="selector-tag">B</span></div><div class="line"><span class="selector-tag">first</span> <span class="selector-tag">second</span>                    </div><div class="line"><span class="selector-tag">bar</span>   <span class="selector-tag">one</span>     0<span class="selector-class">.029399</span> <span class="selector-tag">-0</span><span class="selector-class">.542108</span></div><div class="line">      <span class="selector-tag">two</span>     0<span class="selector-class">.282696</span> <span class="selector-tag">-0</span><span class="selector-class">.087302</span></div><div class="line"><span class="selector-tag">baz</span>   <span class="selector-tag">one</span>    <span class="selector-tag">-1</span><span class="selector-class">.575170</span>  1<span class="selector-class">.771208</span></div><div class="line">      <span class="selector-tag">two</span>     0<span class="selector-class">.816482</span>  1<span class="selector-class">.100230</span></div><div class="line"></div><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[103]</span>: <span class="selector-tag">stacked</span><span class="selector-class">.unstack</span>(1)</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[103]</span>: </div><div class="line"><span class="selector-tag">second</span>        <span class="selector-tag">one</span>       <span class="selector-tag">two</span></div><div class="line"><span class="selector-tag">first</span>                      </div><div class="line"><span class="selector-tag">bar</span>   <span class="selector-tag">A</span>  0<span class="selector-class">.029399</span>  0<span class="selector-class">.282696</span></div><div class="line">      <span class="selector-tag">B</span> <span class="selector-tag">-0</span><span class="selector-class">.542108</span> <span class="selector-tag">-0</span><span class="selector-class">.087302</span></div><div class="line"><span class="selector-tag">baz</span>   <span class="selector-tag">A</span> <span class="selector-tag">-1</span><span class="selector-class">.575170</span>  0<span class="selector-class">.816482</span></div><div class="line">      <span class="selector-tag">B</span>  1<span class="selector-class">.771208</span>  1<span class="selector-class">.100230</span></div><div class="line"></div><div class="line"><span class="selector-tag">In</span> <span class="selector-attr">[104]</span>: <span class="selector-tag">stacked</span><span class="selector-class">.unstack</span>(0)</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[104]</span>: </div><div class="line"><span class="selector-tag">first</span>          <span class="selector-tag">bar</span>       <span class="selector-tag">baz</span></div><div class="line"><span class="selector-tag">second</span>                      </div><div class="line"><span class="selector-tag">one</span>    <span class="selector-tag">A</span>  0<span class="selector-class">.029399</span> <span class="selector-tag">-1</span><span class="selector-class">.575170</span></div><div class="line">       <span class="selector-tag">B</span> <span class="selector-tag">-0</span><span class="selector-class">.542108</span>  1<span class="selector-class">.771208</span></div><div class="line"><span class="selector-tag">two</span>    <span class="selector-tag">A</span>  0<span class="selector-class">.282696</span>  0<span class="selector-class">.816482</span></div><div class="line">       <span class="selector-tag">B</span> <span class="selector-tag">-0</span><span class="selector-class">.087302</span>  1<span class="selector-class">.100230</span></div></pre></td></tr></table></figure><h3 id="数据透视表"><a href="#数据透视表" class="headerlink" title="数据透视表"></a>数据透视表</h3><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/reshaping.html#reshaping-pivot" target="_blank" rel="external">Pivot Tables</a></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">105</span>]: df = pd.DataFrame(&#123;'<span class="keyword">A</span>' : ['one', 'one', 'two', 'three'] * <span class="number">3</span>,</div><div class="line">   .....:                    'B' : ['<span class="keyword">A</span>', 'B', 'C'] * <span class="number">4</span>,</div><div class="line">   .....:                    'C' : ['foo', 'foo', 'foo', 'bar', 'bar', 'bar'] * <span class="number">2</span>,</div><div class="line">   .....:                    'D' : np.random.randn(<span class="number">12</span>),</div><div class="line">   .....:                    'E' : np.random.randn(<span class="number">12</span>)&#125;)</div><div class="line">   .....: </div><div class="line"></div><div class="line">In [<span class="number">106</span>]: df</div><div class="line">Out[<span class="number">106</span>]: </div><div class="line">        <span class="keyword">A</span>  B    C         D         E</div><div class="line"><span class="number">0</span>     one  <span class="keyword">A</span>  foo  <span class="number">1.418757</span> -<span class="number">0.179666</span></div><div class="line"><span class="number">1</span>     one  B  foo -<span class="number">1.879024</span>  <span class="number">1.291836</span></div><div class="line"><span class="number">2</span>     two  C  foo  <span class="number">0.536826</span> -<span class="number">0.009614</span></div><div class="line"><span class="number">3</span>   three  <span class="keyword">A</span>  bar  <span class="number">1.006160</span>  <span class="number">0.392149</span></div><div class="line"><span class="number">4</span>     one  B  bar -<span class="number">0.029716</span>  <span class="number">0.264599</span></div><div class="line"><span class="number">5</span>     one  C  bar -<span class="number">1.146178</span> -<span class="number">0.057409</span></div><div class="line"><span class="number">6</span>     two  <span class="keyword">A</span>  foo  <span class="number">0.100900</span> -<span class="number">1.425638</span></div><div class="line"><span class="number">7</span>   three  B  foo -<span class="number">1.035018</span>  <span class="number">1.024098</span></div><div class="line"><span class="number">8</span>     one  C  foo  <span class="number">0.314665</span> -<span class="number">0.106062</span></div><div class="line"><span class="number">9</span>     one  <span class="keyword">A</span>  bar -<span class="number">0.773723</span>  <span class="number">1.824375</span></div><div class="line"><span class="number">10</span>    two  B  bar -<span class="number">1.170653</span>  <span class="number">0.595974</span></div><div class="line"><span class="number">11</span>  three  C  bar  <span class="number">0.648740</span>  <span class="number">1.167115</span></div></pre></td></tr></table></figure><p>我们可以很容易地从这些数据生成数据透视表：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">107</span>]: pd.pivot_table(df, values='D', index=['<span class="keyword">A</span>', 'B'], columns=['C'])</div><div class="line">Out[<span class="number">107</span>]: </div><div class="line">C             bar       foo</div><div class="line"><span class="keyword">A</span>     B                    </div><div class="line">one   <span class="keyword">A</span> -<span class="number">0.773723</span>  <span class="number">1.418757</span></div><div class="line">      B -<span class="number">0.029716</span> -<span class="number">1.879024</span></div><div class="line">      C -<span class="number">1.146178</span>  <span class="number">0.314665</span></div><div class="line">three <span class="keyword">A</span>  <span class="number">1.006160</span>       NaN</div><div class="line">      B       NaN -<span class="number">1.035018</span></div><div class="line">      C  <span class="number">0.648740</span>       NaN</div><div class="line">two   <span class="keyword">A</span>       NaN  <span class="number">0.100900</span></div><div class="line">      B -<span class="number">1.170653</span>       NaN</div><div class="line">      C       NaN  <span class="number">0.536826</span></div></pre></td></tr></table></figure><h2 id="时间序列"><a href="#时间序列" class="headerlink" title="时间序列"></a>时间序列</h2><p>Pandas在对频率转换进行重新采样时拥有简单、强大且高效的功能（如将按秒采样的数据转换为按5分钟为单位进行采样的数据）。这种操作在金融领域非常常见。</p><p>详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/timeseries.html#timeseries" target="_blank" rel="external">Time Series section</a></p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">108</span>]: rng = pd.date_range(<span class="string">'1/1/2012'</span>, periods=<span class="number">100</span>, freq=<span class="string">'S'</span>)</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">109</span>]: ts = pd.Series(np.random.randint(<span class="number">0</span>, <span class="number">500</span>, len(rng)), <span class="keyword">index</span>=rng)</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">110</span>]: ts.resample(<span class="string">'5Min'</span>).sum()</div><div class="line"><span class="keyword">Out</span>[<span class="number">110</span>]: </div><div class="line"><span class="number">2012</span>-<span class="number">01</span>-<span class="number">01</span>    <span class="number">25083</span></div><div class="line">Freq: <span class="number">5</span>T, dtype: int64</div></pre></td></tr></table></figure><p>时区表示</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">111</span>]: rng = pd.date_range('<span class="number">3/6/2012</span> <span class="number">00</span>:<span class="number">00</span>', periods=<span class="number">5</span>, freq='D')</div><div class="line"></div><div class="line">In [<span class="number">112</span>]: ts = pd.Series(np.random.randn(len(rng)), rng)</div><div class="line"></div><div class="line">In [<span class="number">113</span>]: ts</div><div class="line">Out[<span class="number">113</span>]: </div><div class="line"><span class="number">2012-03-06</span>    <span class="number">0.464000</span></div><div class="line"><span class="number">2012-03-07</span>    <span class="number">0.227371</span></div><div class="line"><span class="number">2012-03-08</span>   -<span class="number">0.496922</span></div><div class="line"><span class="number">2012-03-09</span>    <span class="number">0.306389</span></div><div class="line"><span class="number">2012-03-10</span>   -<span class="number">2.290613</span></div><div class="line">Freq: D, dtype: float64</div><div class="line"></div><div class="line">In [<span class="number">114</span>]: ts_utc = ts.tz_localize('UTC')</div><div class="line"></div><div class="line">In [<span class="number">115</span>]: ts_utc</div><div class="line">Out[<span class="number">115</span>]: </div><div class="line"><span class="number">2012-03-06</span> <span class="number">00:00:00+00</span>:<span class="number">00</span>    <span class="number">0.464000</span></div><div class="line"><span class="number">2012-03-07</span> <span class="number">00:00:00+00</span>:<span class="number">00</span>    <span class="number">0.227371</span></div><div class="line"><span class="number">2012-03-08</span> <span class="number">00:00:00+00</span>:<span class="number">00</span>   -<span class="number">0.496922</span></div><div class="line"><span class="number">2012-03-09</span> <span class="number">00:00:00+00</span>:<span class="number">00</span>    <span class="number">0.306389</span></div><div class="line"><span class="number">2012-03-10</span> <span class="number">00:00:00+00</span>:<span class="number">00</span>   -<span class="number">2.290613</span></div><div class="line">Freq: D, dtype: float64</div></pre></td></tr></table></figure><p>转换成其他时区</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">In <span class="selector-attr">[116]</span>: <span class="selector-tag">ts_utc</span><span class="selector-class">.tz_convert</span>(<span class="string">'US/Eastern'</span>)</div><div class="line"><span class="selector-tag">Out</span><span class="selector-attr">[116]</span>: </div><div class="line"><span class="selector-tag">2012-03-05</span> <span class="selector-tag">19</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00-05</span><span class="selector-pseudo">:00</span>    <span class="selector-tag">0</span><span class="selector-class">.464000</span></div><div class="line"><span class="selector-tag">2012-03-06</span> <span class="selector-tag">19</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00-05</span><span class="selector-pseudo">:00</span>    <span class="selector-tag">0</span><span class="selector-class">.227371</span></div><div class="line"><span class="selector-tag">2012-03-07</span> <span class="selector-tag">19</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00-05</span><span class="selector-pseudo">:00</span>   <span class="selector-tag">-0</span><span class="selector-class">.496922</span></div><div class="line"><span class="selector-tag">2012-03-08</span> <span class="selector-tag">19</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00-05</span><span class="selector-pseudo">:00</span>    <span class="selector-tag">0</span><span class="selector-class">.306389</span></div><div class="line"><span class="selector-tag">2012-03-09</span> <span class="selector-tag">19</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00-05</span><span class="selector-pseudo">:00</span>   <span class="selector-tag">-2</span><span class="selector-class">.290613</span></div><div class="line"><span class="selector-tag">Freq</span>: <span class="selector-tag">D</span>, <span class="selector-tag">dtype</span>: <span class="selector-tag">float64</span></div></pre></td></tr></table></figure><p>在时间跨度表示之间进行转换</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">117</span>]: rng = pd.date_range('<span class="number">1/1/2012</span>', periods=<span class="number">5</span>, freq='M')</div><div class="line"></div><div class="line">In [<span class="number">118</span>]: ts = pd.Series(np.random.randn(len(rng)), index=rng)</div><div class="line"></div><div class="line">In [<span class="number">119</span>]: ts</div><div class="line">Out[<span class="number">119</span>]: </div><div class="line"><span class="number">2012-01-31</span>   -<span class="number">1.134623</span></div><div class="line"><span class="number">2012-02-29</span>   -<span class="number">1.561819</span></div><div class="line"><span class="number">2012-03-31</span>   -<span class="number">0.260838</span></div><div class="line"><span class="number">2012-04-30</span>    <span class="number">0.281957</span></div><div class="line"><span class="number">2012-05-31</span>    <span class="number">1.523962</span></div><div class="line">Freq: M, dtype: float64</div><div class="line"></div><div class="line">In [<span class="number">120</span>]: ps = ts.to_period()</div><div class="line"></div><div class="line">In [<span class="number">121</span>]: ps</div><div class="line">Out[<span class="number">121</span>]: </div><div class="line"><span class="number">2012</span>-<span class="number">01</span>   -<span class="number">1.134623</span></div><div class="line"><span class="number">2012</span>-<span class="number">02</span>   -<span class="number">1.561819</span></div><div class="line"><span class="number">2012</span>-<span class="number">03</span>   -<span class="number">0.260838</span></div><div class="line"><span class="number">2012</span>-<span class="number">04</span>    <span class="number">0.281957</span></div><div class="line"><span class="number">2012</span>-<span class="number">05</span>    <span class="number">1.523962</span></div><div class="line">Freq: M, dtype: float64</div><div class="line"></div><div class="line">In [<span class="number">122</span>]: ps.to_timestamp()</div><div class="line">Out[<span class="number">122</span>]: </div><div class="line"><span class="number">2012-01-01</span>   -<span class="number">1.134623</span></div><div class="line"><span class="number">2012-02-01</span>   -<span class="number">1.561819</span></div><div class="line"><span class="number">2012-03-01</span>   -<span class="number">0.260838</span></div><div class="line"><span class="number">2012-04-01</span>    <span class="number">0.281957</span></div><div class="line"><span class="number">2012-05-01</span>    <span class="number">1.523962</span></div><div class="line">Freq: MS, dtype: float64</div></pre></td></tr></table></figure><p>周期和时间戳之间的转换可以使用一些方便的算术功能。在下面的例子中，我们将季度结束时间从11月份转换为季末结束时的上午9点：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">123</span>]: prng = pd.period_range(<span class="string">'1990Q1'</span>, <span class="string">'2000Q4'</span>, freq=<span class="string">'Q-NOV'</span>)</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">124</span>]: ts = pd.Series(np.random.randn(len(prng)), prng)</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">125</span>]: ts.<span class="keyword">index</span> = (prng.asfreq(<span class="string">'M'</span>, <span class="string">'e'</span>) + <span class="number">1</span>).asfreq(<span class="string">'H'</span>, <span class="string">'s'</span>) + <span class="number">9</span></div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">126</span>]: ts.head()</div><div class="line"><span class="keyword">Out</span>[<span class="number">126</span>]: </div><div class="line"><span class="number">1990</span>-<span class="number">03</span>-<span class="number">01</span> <span class="number">09</span>:<span class="number">00</span>   -<span class="number">0.902937</span></div><div class="line"><span class="number">1990</span>-<span class="number">06</span>-<span class="number">01</span> <span class="number">09</span>:<span class="number">00</span>    <span class="number">0.068159</span></div><div class="line"><span class="number">1990</span>-<span class="number">09</span>-<span class="number">01</span> <span class="number">09</span>:<span class="number">00</span>   -<span class="number">0.057873</span></div><div class="line"><span class="number">1990</span>-<span class="number">12</span>-<span class="number">01</span> <span class="number">09</span>:<span class="number">00</span>   -<span class="number">0.368204</span></div><div class="line"><span class="number">1991</span>-<span class="number">03</span>-<span class="number">01</span> <span class="number">09</span>:<span class="number">00</span>   -<span class="number">1.144073</span></div><div class="line">Freq: H, dtype: float64</div></pre></td></tr></table></figure><h2 id="Categorical"><a href="#Categorical" class="headerlink" title="Categorical"></a>Categorical</h2><p>pandas可以在DataFrame中引入categorical数据。详情请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/categorical.html#categorical" target="_blank" rel="external">categorical introduction</a>和<a href="http://pandas.pydata.org/pandas-docs/stable/api.html#api-categorical" target="_blank" rel="external">API documentation</a>。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">127</span>]: df = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">"id"</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], <span class="string">"raw_grade"</span>:[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'e'</span>]&#125;)</div></pre></td></tr></table></figure><p>将原始的grade转换为Categorical数据类型：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">128</span>]: df[<span class="string">"grade"</span>] = df[<span class="string">"raw_grade"</span>].astype(<span class="string">"category"</span>)</div><div class="line"></div><div class="line">In [<span class="number">129</span>]: df[<span class="string">"grade"</span>]</div><div class="line">Out[<span class="number">129</span>]: </div><div class="line"><span class="number">0</span>    <span class="selector-tag">a</span></div><div class="line"><span class="number">1</span>    <span class="selector-tag">b</span></div><div class="line"><span class="number">2</span>    <span class="selector-tag">b</span></div><div class="line"><span class="number">3</span>    <span class="selector-tag">a</span></div><div class="line"><span class="number">4</span>    <span class="selector-tag">a</span></div><div class="line"><span class="number">5</span>    e</div><div class="line">Name: grade, dtype: category</div><div class="line">Categories (<span class="number">3</span>, object): [<span class="selector-tag">a</span>, <span class="selector-tag">b</span>, e]</div></pre></td></tr></table></figure><p>将类别重命名为更有意义的名称</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">In</span> [<span class="number">130</span>]: df[<span class="string">"grade"</span>].cat.categories = [<span class="string">"very good"</span>, <span class="string">"good"</span>, <span class="string">"very bad"</span>]</div></pre></td></tr></table></figure><p>重新排列类别并同时添加缺少的类别（Series .cat下的方法默认返回一个新的系列）。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">131</span>]: df[<span class="string">"grade"</span>] = df[<span class="string">"grade"</span>].cat.set_categories([<span class="string">"very bad"</span>, <span class="string">"bad"</span>, <span class="string">"medium"</span>, <span class="string">"good"</span>, <span class="string">"very good"</span>])</div><div class="line"></div><div class="line"><span class="symbol">In</span> [<span class="number">132</span>]: df[<span class="string">"grade"</span>]</div><div class="line"><span class="symbol">Out</span>[<span class="number">132</span>]: </div><div class="line"><span class="number">0</span>    very good</div><div class="line"><span class="number">1</span>         good</div><div class="line"><span class="number">2</span>         good</div><div class="line"><span class="number">3</span>    very good</div><div class="line"><span class="number">4</span>    very good</div><div class="line"><span class="number">5</span>     very bad</div><div class="line"><span class="symbol">Name</span>: grade, dtype: category</div><div class="line"><span class="symbol">Categories</span> (<span class="number">5</span>, object): [very bad, bad, medium, good, very good]</div></pre></td></tr></table></figure><p>排序是按类别排序的，而不是词汇顺序。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">133</span>]: df.sort_values(by=<span class="string">"grade"</span>)</div><div class="line">Out[<span class="number">133</span>]: </div><div class="line">   id raw_grade      grade</div><div class="line"><span class="number">5</span>   <span class="number">6</span>         e   very bad</div><div class="line"><span class="number">1</span>   <span class="number">2</span>         <span class="selector-tag">b</span>       good</div><div class="line"><span class="number">2</span>   <span class="number">3</span>         <span class="selector-tag">b</span>       good</div><div class="line"><span class="number">0</span>   <span class="number">1</span>         <span class="selector-tag">a</span>  very good</div><div class="line"><span class="number">3</span>   <span class="number">4</span>         <span class="selector-tag">a</span>  very good</div><div class="line"><span class="number">4</span>   <span class="number">5</span>         <span class="selector-tag">a</span>  very good</div></pre></td></tr></table></figure><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><p><a href="http://pandas.pydata.org/pandas-docs/stable/visualization.html#visualization" target="_blank" rel="external">Plotting</a>文档</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">135</span>]: ts = pd.Series(np<span class="selector-class">.random</span><span class="selector-class">.randn</span>(<span class="number">1000</span>), index=pd.date_range(<span class="string">'1/1/2000'</span>, periods=<span class="number">1000</span>))</div><div class="line"></div><div class="line">In [<span class="number">136</span>]: ts = ts.cumsum()</div><div class="line"></div><div class="line">In [<span class="number">137</span>]: ts.plot()</div><div class="line">Out[<span class="number">137</span>]: &lt;matplotlib<span class="selector-class">.axes</span>._subplots<span class="selector-class">.AxesSubplot</span> at <span class="number">0</span>x1122ad630&gt;</div></pre></td></tr></table></figure><p><img src="http://pandas.pydata.org/pandas-docs/stable/_images/series_plot_basic.png" alt=""></p><p>在DataFrame上，<code>plot()</code>方便绘制所有带标签的列：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">In</span> [<span class="number">138</span>]: df = pd.DataFrame(np.random.randn(<span class="number">1000</span>, <span class="number">4</span>), <span class="keyword">index</span>=ts.<span class="keyword">index</span>,</div><div class="line">   .....:                   columns=[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>])</div><div class="line">   .....: </div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">139</span>]: df = df.cumsum()</div><div class="line"></div><div class="line"><span class="keyword">In</span> [<span class="number">140</span>]: plt.figure(); df.plot(); plt.legend(loc=<span class="string">'best'</span>)</div><div class="line"><span class="keyword">Out</span>[<span class="number">140</span>]: &lt;matplotlib.legend.Legend at <span class="number">0</span>x115033cf8&gt;</div></pre></td></tr></table></figure><p><img src="http://pandas.pydata.org/pandas-docs/stable/_images/frame_plot_basic.png" alt=""></p><h2 id="导入和保存数据"><a href="#导入和保存数据" class="headerlink" title="导入和保存数据"></a>导入和保存数据</h2><h3 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h3><p><a href="http://pandas.pydata.org/pandas-docs/stable/io.html#io-store-in-csv" target="_blank" rel="external">Writing to a csv file</a></p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">In <span class="selector-attr">[141]</span>: <span class="selector-tag">df</span><span class="selector-class">.to_csv</span>(<span class="string">'foo.csv'</span>)</div></pre></td></tr></table></figure><p><a href="http://pandas.pydata.org/pandas-docs/stable/io.html#io-read-csv-table" target="_blank" rel="external">Reading from a csv file</a></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">142</span>]: pd.read_csv('foo.csv')</div><div class="line">Out[<span class="number">142</span>]: </div><div class="line">     Unnamed: <span class="number">0</span>          <span class="keyword">A</span>          B         C          D</div><div class="line"><span class="number">0</span>    <span class="number">2000-01-01</span>   <span class="number">0.266457</span>  -<span class="number">0.399641</span> -<span class="number">0.219582</span>   <span class="number">1.186860</span></div><div class="line"><span class="number">1</span>    <span class="number">2000-01-02</span>  -<span class="number">1.170732</span>  -<span class="number">0.345873</span>  <span class="number">1.653061</span>  -<span class="number">0.282953</span></div><div class="line"><span class="number">2</span>    <span class="number">2000-01-03</span>  -<span class="number">1.734933</span>   <span class="number">0.530468</span>  <span class="number">2.060811</span>  -<span class="number">0.515536</span></div><div class="line"><span class="number">3</span>    <span class="number">2000-01-04</span>  -<span class="number">1.555121</span>   <span class="number">1.452620</span>  <span class="number">0.239859</span>  -<span class="number">1.156896</span></div><div class="line"><span class="number">4</span>    <span class="number">2000-01-05</span>   <span class="number">0.578117</span>   <span class="number">0.511371</span>  <span class="number">0.103552</span>  -<span class="number">2.428202</span></div><div class="line"><span class="number">5</span>    <span class="number">2000-01-06</span>   <span class="number">0.478344</span>   <span class="number">0.449933</span> -<span class="number">0.741620</span>  -<span class="number">1.962409</span></div><div class="line"><span class="number">6</span>    <span class="number">2000-01-07</span>   <span class="number">1.235339</span>  -<span class="number">0.091757</span> -<span class="number">1.543861</span>  -<span class="number">1.084753</span></div><div class="line">..          ...        ...        ...       ...        ...</div><div class="line"><span class="number">993</span>  <span class="number">2002-09-20</span> -<span class="number">10.628548</span>  -<span class="number">9.153563</span> -<span class="number">7.883146</span>  <span class="number">28.313940</span></div><div class="line"><span class="number">994</span>  <span class="number">2002-09-21</span> -<span class="number">10.390377</span>  -<span class="number">8.727491</span> -<span class="number">6.399645</span>  <span class="number">30.914107</span></div><div class="line"><span class="number">995</span>  <span class="number">2002-09-22</span>  -<span class="number">8.985362</span>  -<span class="number">8.485624</span> -<span class="number">4.669462</span>  <span class="number">31.367740</span></div><div class="line"><span class="number">996</span>  <span class="number">2002-09-23</span>  -<span class="number">9.558560</span>  -<span class="number">8.781216</span> -<span class="number">4.499815</span>  <span class="number">30.518439</span></div><div class="line"><span class="number">997</span>  <span class="number">2002-09-24</span>  -<span class="number">9.902058</span>  -<span class="number">9.340490</span> -<span class="number">4.386639</span>  <span class="number">30.105593</span></div><div class="line"><span class="number">998</span>  <span class="number">2002-09-25</span> -<span class="number">10.216020</span>  -<span class="number">9.480682</span> -<span class="number">3.933802</span>  <span class="number">29.758560</span></div><div class="line"><span class="number">999</span>  <span class="number">2002-09-26</span> -<span class="number">11.856774</span> -<span class="number">10.671012</span> -<span class="number">3.216025</span>  <span class="number">29.369368</span></div><div class="line"></div><div class="line">[<span class="number">1000</span> rows x <span class="number">5</span> columns]</div></pre></td></tr></table></figure><h3 id="HDF5"><a href="#HDF5" class="headerlink" title="HDF5"></a>HDF5</h3><p>从<a href="http://pandas.pydata.org/pandas-docs/stable/io.html#io-hdf5" target="_blank" rel="external">HDFStores</a>读取和写入数据</p><p>写入HDF5存储：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">In <span class="selector-attr">[143]</span>: <span class="selector-tag">df</span><span class="selector-class">.to_hdf</span>(<span class="string">'foo.h5'</span>,<span class="string">'df'</span>)</div></pre></td></tr></table></figure><p>从HDF5存储中读取：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">144</span>]: pd.read_hdf('foo.h5','df')</div><div class="line">Out[<span class="number">144</span>]: </div><div class="line">                    <span class="keyword">A</span>          B         C          D</div><div class="line"><span class="number">2000-01-01</span>   <span class="number">0.266457</span>  -<span class="number">0.399641</span> -<span class="number">0.219582</span>   <span class="number">1.186860</span></div><div class="line"><span class="number">2000-01-02</span>  -<span class="number">1.170732</span>  -<span class="number">0.345873</span>  <span class="number">1.653061</span>  -<span class="number">0.282953</span></div><div class="line"><span class="number">2000-01-03</span>  -<span class="number">1.734933</span>   <span class="number">0.530468</span>  <span class="number">2.060811</span>  -<span class="number">0.515536</span></div><div class="line"><span class="number">2000-01-04</span>  -<span class="number">1.555121</span>   <span class="number">1.452620</span>  <span class="number">0.239859</span>  -<span class="number">1.156896</span></div><div class="line"><span class="number">2000-01-05</span>   <span class="number">0.578117</span>   <span class="number">0.511371</span>  <span class="number">0.103552</span>  -<span class="number">2.428202</span></div><div class="line"><span class="number">2000-01-06</span>   <span class="number">0.478344</span>   <span class="number">0.449933</span> -<span class="number">0.741620</span>  -<span class="number">1.962409</span></div><div class="line"><span class="number">2000-01-07</span>   <span class="number">1.235339</span>  -<span class="number">0.091757</span> -<span class="number">1.543861</span>  -<span class="number">1.084753</span></div><div class="line">...               ...        ...       ...        ...</div><div class="line"><span class="number">2002-09-20</span> -<span class="number">10.628548</span>  -<span class="number">9.153563</span> -<span class="number">7.883146</span>  <span class="number">28.313940</span></div><div class="line"><span class="number">2002-09-21</span> -<span class="number">10.390377</span>  -<span class="number">8.727491</span> -<span class="number">6.399645</span>  <span class="number">30.914107</span></div><div class="line"><span class="number">2002-09-22</span>  -<span class="number">8.985362</span>  -<span class="number">8.485624</span> -<span class="number">4.669462</span>  <span class="number">31.367740</span></div><div class="line"><span class="number">2002-09-23</span>  -<span class="number">9.558560</span>  -<span class="number">8.781216</span> -<span class="number">4.499815</span>  <span class="number">30.518439</span></div><div class="line"><span class="number">2002-09-24</span>  -<span class="number">9.902058</span>  -<span class="number">9.340490</span> -<span class="number">4.386639</span>  <span class="number">30.105593</span></div><div class="line"><span class="number">2002-09-25</span> -<span class="number">10.216020</span>  -<span class="number">9.480682</span> -<span class="number">3.933802</span>  <span class="number">29.758560</span></div><div class="line"><span class="number">2002-09-26</span> -<span class="number">11.856774</span> -<span class="number">10.671012</span> -<span class="number">3.216025</span>  <span class="number">29.369368</span></div><div class="line"></div><div class="line">[<span class="number">1000</span> rows x <span class="number">4</span> columns]</div></pre></td></tr></table></figure><h3 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h3><p>从<a href="http://pandas.pydata.org/pandas-docs/stable/io.html#io-excel" target="_blank" rel="external">MS Excel</a>中读取和写入数据</p><p>写入一个excel文件</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">In <span class="selector-attr">[145]</span>: <span class="selector-tag">df</span><span class="selector-class">.to_excel</span>(<span class="string">'foo.xlsx'</span>, sheet_name=<span class="string">'Sheet1'</span>)</div></pre></td></tr></table></figure><p>读取一个excel文件</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">146</span>]: pd.read_excel('foo.xlsx', 'Sheet1', index_col=None, na_values=['NA'])</div><div class="line">Out[<span class="number">146</span>]: </div><div class="line">                    <span class="keyword">A</span>          B         C          D</div><div class="line"><span class="number">2000-01-01</span>   <span class="number">0.266457</span>  -<span class="number">0.399641</span> -<span class="number">0.219582</span>   <span class="number">1.186860</span></div><div class="line"><span class="number">2000-01-02</span>  -<span class="number">1.170732</span>  -<span class="number">0.345873</span>  <span class="number">1.653061</span>  -<span class="number">0.282953</span></div><div class="line"><span class="number">2000-01-03</span>  -<span class="number">1.734933</span>   <span class="number">0.530468</span>  <span class="number">2.060811</span>  -<span class="number">0.515536</span></div><div class="line"><span class="number">2000-01-04</span>  -<span class="number">1.555121</span>   <span class="number">1.452620</span>  <span class="number">0.239859</span>  -<span class="number">1.156896</span></div><div class="line"><span class="number">2000-01-05</span>   <span class="number">0.578117</span>   <span class="number">0.511371</span>  <span class="number">0.103552</span>  -<span class="number">2.428202</span></div><div class="line"><span class="number">2000-01-06</span>   <span class="number">0.478344</span>   <span class="number">0.449933</span> -<span class="number">0.741620</span>  -<span class="number">1.962409</span></div><div class="line"><span class="number">2000-01-07</span>   <span class="number">1.235339</span>  -<span class="number">0.091757</span> -<span class="number">1.543861</span>  -<span class="number">1.084753</span></div><div class="line">...               ...        ...       ...        ...</div><div class="line"><span class="number">2002-09-20</span> -<span class="number">10.628548</span>  -<span class="number">9.153563</span> -<span class="number">7.883146</span>  <span class="number">28.313940</span></div><div class="line"><span class="number">2002-09-21</span> -<span class="number">10.390377</span>  -<span class="number">8.727491</span> -<span class="number">6.399645</span>  <span class="number">30.914107</span></div><div class="line"><span class="number">2002-09-22</span>  -<span class="number">8.985362</span>  -<span class="number">8.485624</span> -<span class="number">4.669462</span>  <span class="number">31.367740</span></div><div class="line"><span class="number">2002-09-23</span>  -<span class="number">9.558560</span>  -<span class="number">8.781216</span> -<span class="number">4.499815</span>  <span class="number">30.518439</span></div><div class="line"><span class="number">2002-09-24</span>  -<span class="number">9.902058</span>  -<span class="number">9.340490</span> -<span class="number">4.386639</span>  <span class="number">30.105593</span></div><div class="line"><span class="number">2002-09-25</span> -<span class="number">10.216020</span>  -<span class="number">9.480682</span> -<span class="number">3.933802</span>  <span class="number">29.758560</span></div><div class="line"><span class="number">2002-09-26</span> -<span class="number">11.856774</span> -<span class="number">10.671012</span> -<span class="number">3.216025</span>  <span class="number">29.369368</span></div><div class="line"></div><div class="line">[<span class="number">1000</span> rows x <span class="number">4</span> columns]</div></pre></td></tr></table></figure><h2 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h2><p>如果你正在尝试一个操作，你会看到一个异常：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;<span class="built_in"> if </span>pd.Series([False, True, False]):</div><div class="line">    print(<span class="string">"I was true"</span>)</div><div class="line">Traceback</div><div class="line"><span class="keyword">    .</span>..</div><div class="line">ValueError: The truth value of an<span class="built_in"> array </span>is ambiguous. Use a.empty, a.any()<span class="built_in"> or </span>a.all().</div></pre></td></tr></table></figure><p>请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/basics.html#basics-compare" target="_blank" rel="external">Comparisons</a>以获取解释以及如何处理。</p><p>同时请参阅<a href="http://pandas.pydata.org/pandas-docs/stable/gotchas.html#gotchas" target="_blank" rel="external">Gotchas</a>。</p>]]></content:encoded>
      
      <comments>http://studyai.site/2017/11/30/10%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8BPandas/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【原创】不用一句深度学习术语来讲解神经网络运作原理</title>
      <link>http://studyai.site/2017/09/24/%E4%B8%8D%E7%94%A8%E4%B8%80%E5%8F%A5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%AF%E8%AF%AD%E6%9D%A5%E8%AE%B2%E8%A7%A3%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%BF%90%E4%BD%9C%E5%8E%9F%E7%90%86/</link>
      <guid>http://studyai.site/2017/09/24/%E4%B8%8D%E7%94%A8%E4%B8%80%E5%8F%A5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%AF%E8%AF%AD%E6%9D%A5%E8%AE%B2%E8%A7%A3%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%BF%90%E4%BD%9C%E5%8E%9F%E7%90%86/</guid>
      <pubDate>Sat, 23 Sep 2017 17:11:00 GMT</pubDate>
      <description>
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;原创文章，转载请注明出处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;神经网络-多层级组织架构的公司&quot;&gt;&lt;a href=&quot;#神经网络-多层级组织架构的公司&quot; class=&quot;headerlink&quot; title=&quot;神经网络==多层级组织架构的公
        
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>原创文章，转载请注明出处</p></blockquote><h2 id="神经网络-多层级组织架构的公司"><a href="#神经网络-多层级组织架构的公司" class="headerlink" title="神经网络==多层级组织架构的公司"></a>神经网络==多层级组织架构的公司</h2><p>假设有一家公司，这家公司的组织架构是下面这种多层级的结构：</p><p><img src="/img/17_09_24/001.png" alt=""></p><p>公司每天接待一批固定数量的用户，这些用户会将自己的数据告诉给公司，公司做的事情就是通过每个用户上报的数据来推测当前用户群体整体所表现出来的状态。</p><p><img src="/img/17_09_24/002.png" alt=""></p><p>公司中直接与用户打交道的只有基层业务员，小部门经理只与基层业务员打交道，大部门经理只与小部门经理打交道…依此类推，层层递进，直到CEO这一层。</p><p>并且其中每一个基层业务员会了解每个用户的数据，每个小部门经理也会了解每个基层业务员输出的情况，…，依次类推，直到CEO。而CEO需要了解的是每个副总经理输出的情况。</p><p>公司拿到一批用户的数据之后，首先交给基层业务员。每个基层业务员看到了每个用户的数据之后，都会针对每一个用户出一份数据分析报表（由于每个人的观点不同，所以每个人得出的报表都不一样）；然后每个小部门经理也会分别去看每个业务员输出的报表，然后自己再输出一个针对每一个基层业务员输出的数据的分析报表；同样，每个大部门经理也会去这样看每个小部门经理输出的报表，然后出一份针对每一个小部门经理输出的数据的分析报表；…；以此类推，最终CEO会输出一个针对每一个副总经理输出的数据的分析报表，这份报表里就是公司当前对用户状态的理解。</p><p><img src="/img/17_09_24/003.png" alt=""></p><p>那么公司对用户状态把握到底准确不准确呢？这需要一个衡量标准。</p><p>所以我们需要对公司进行考核，将一部分已知状态的用户数据给到公司，看公司是否能足够准确的预测出这个状态。换句话说，就是CEO最后输出的这份报表，与用户的真实状态之间相差有多大。</p><p><img src="/img/17_09_24/004.png" alt=""></p><p>如果CEO发现自己的预测和真实情况偏差很大，它会带头思考自己工作上到底哪里做的不够好导致最终的判断失误，以及自己需要如何调整状态才能使公司表现更好，然后号召副总经理反思并调整状态。副总经理反思调整之后，会号召他的直属下级部门反思并调整状态。以此类推，直到基层业务员。但其实每个人都不能完全保证调整的状态是否可靠，所以大家就比较保守的<strong>稍微调整一下</strong>自己的工作状态。</p><p>当全公司员工调整状态完成之后，在面对新的用户数据，看是否能更加准确的预测用户群体的状态。如果发现上面的调整确实有效，那么继续按照上面的方式调整：由CEO再次依次号召下面的员工来调整工作状态，调整之后继续面对新的用户。重复执行上面的操作若干次之后，直到公司的预测效果趋于稳定为止（和真实状态对比之后，差值基本不再变化了）。</p><p><img src="/img/17_09_24/005.png" alt=""></p><p>此时的公司就相当于经历了若干次碰壁，并且若干次全员反思、调整状态之后，各个员工都成为了精兵强将了，对于用户数据的把握也更加准确了。</p><p>现在，我们回头看看公司接待的客户。假设公司每天共接待1024位用户，每个用户都举着一个纯色的卡片，卡片颜色是灰度值介于0到255之间的某个颜色。</p><p><img src="/img/17_09_24/006.png" alt=""></p><p>将这些用户按顺序排在32×32的平面上，每个用户占一格。当他们将手里的纯色卡片高举并拼凑起来之后，我们会看到一个写有数字的图片。</p><p><img src="/img/17_09_24/007.png" alt=""></p><p>公司做的事情就是每天接待这1024个用户，他们会告诉公司自己手里卡片的灰度值，但不会告诉公司卡片拼起来的图片是什么，然后公司经过层层分析来得出当前所有用户卡片拼起来的图像是什么。</p><p>这就是一个用户识别手写数字的DNN模型的形象比喻。</p><hr><h3 id="几个问题的思考"><a href="#几个问题的思考" class="headerlink" title="几个问题的思考"></a>几个问题的思考</h3><h4 id="公司员工数量一定的情况下，组织架构是越扁平越好，还是层级越多越好？"><a href="#公司员工数量一定的情况下，组织架构是越扁平越好，还是层级越多越好？" class="headerlink" title="公司员工数量一定的情况下，组织架构是越扁平越好，还是层级越多越好？"></a>公司员工数量一定的情况下，组织架构是越扁平越好，还是层级越多越好？</h4><p>扁平化的架构带来的好处是快速直接触达用户，但最终的准确率会比较低；多层级的架构带来的好处是更合理的分工，但会带来沟通和管理上的开销和数据损失。</p><p>所以如何设置公司层级是一门学问。</p><h4 id="每个员工是如何生成报表的？"><a href="#每个员工是如何生成报表的？" class="headerlink" title="每个员工是如何生成报表的？"></a>每个员工是如何生成报表的？</h4><p>每个员工根据自己对每个数据的重要程度的看法，计算出自己对每个数据的看法。然后在经过一层加工处理之后输出报表。</p><h4 id="公司招聘员工的时候，应该招聘类似的人群，还是招聘差异化的人群？"><a href="#公司招聘员工的时候，应该招聘类似的人群，还是招聘差异化的人群？" class="headerlink" title="公司招聘员工的时候，应该招聘类似的人群，还是招聘差异化的人群？"></a>公司招聘员工的时候，应该招聘类似的人群，还是招聘差异化的人群？</h4><p>应该招聘差异化大的人群，这样每个人能够产生对数据的不同看法。如果公司大部分人背景相似，那么他们对待同一类问题，产生的看法也都相似，没有多样化的观点，也容易导致公司做出错误判断。</p><hr><h3 id="带入术语"><a href="#带入术语" class="headerlink" title="带入术语"></a>带入术语</h3><ul><li>神经网络 -&gt; 多层级结构的公司</li><li>神经网络架构 -&gt; 公司组织架构</li><li>神经元 -&gt; 每一位员工</li><li>损失函数/代价函数 -&gt; 公司最终预测结果 - 真实结果</li><li>输入数据源 -&gt; 每天所有用户的卡片灰度值向量</li><li>输入数据标签值 -&gt; 所有用户卡片拼凑起来的数字图像的真实数值</li><li>反向传播 -&gt; 由CEO牵头，依次带领全公司员工反思</li><li>正向传递 -&gt; 带入每天的用户数据，层层递进，输出最终预测结果</li><li>激活函数 -&gt; 每个员工对数据的加工</li><li>参数 -&gt; 每个员工对数据的主观看法</li><li>随机初始化参数 -&gt; 招聘差异化人群</li><li>输入层 -&gt; 用户层</li><li>隐藏层 -&gt; 除了CEO之外的所有员工层级</li><li>输出层 -&gt; CEO层</li><li>梯度下降 -&gt; 公司朝着缩小预测错误程度的方向全员反思调整状态的过程</li><li>学习率 -&gt; 每次调整状态的程度α</li><li>训练/学习 -&gt; 带入大量已知状态的用户数据来根据公司的预测结果调整全员状态的过程</li></ul><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>神经网络是一个灵活的结构，当带入图片像素值以及图片标签数据时，它训练的就是一个图片识别模型；当带入的数据是邮件特征数据，以及邮件是否为垃圾邮件的类别数据时，它可能就是一个垃圾邮件识别模型。</p><p>这里的类比并不严谨，准确的定义还需要参考标准定义。不过通过形象化的类比，可以使我们对神经网络建立起系统化的认知。</p>]]></content:encoded>
      
      <comments>http://studyai.site/2017/09/24/%E4%B8%8D%E7%94%A8%E4%B8%80%E5%8F%A5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%AF%E8%AF%AD%E6%9D%A5%E8%AE%B2%E8%A7%A3%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%BF%90%E4%BD%9C%E5%8E%9F%E7%90%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【Tensorflow r1.0 程序员指南】-变量：创建，初始化，保存和加载</title>
      <link>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91-%E5%8F%98%E9%87%8F%EF%BC%9A%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%BF%9D%E5%AD%98%E5%92%8C%E5%8A%A0%E8%BD%BD/</link>
      <guid>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91-%E5%8F%98%E9%87%8F%EF%BC%9A%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%BF%9D%E5%AD%98%E5%92%8C%E5%8A%A0%E8%BD%BD/</guid>
      <pubDate>Tue, 08 Aug 2017 14:08:58 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;当你训练一个模型时，您可以使用&lt;a href=&quot;https://www.tensorflow.org/api_guides/python/state_ops&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;variables&lt;/a&gt;来保存和更新参数。vari
        
      
      </description>
      
      <content:encoded><![CDATA[<p>当你训练一个模型时，您可以使用<a href="https://www.tensorflow.org/api_guides/python/state_ops" target="_blank" rel="external">variables</a>来保存和更新参数。variables是包含张量的内存缓冲区。variables必须明确地被初始化，并在训练期间和之后将其保存到磁盘。在之后您可以恢复保存的值，以运行或分析模型。</p><p>本文档引用了以下TensorFlow类。请参阅其参考手册的链接，了解其API的完整说明：</p><ul><li><a href="https://www.tensorflow.org/api_docs/python/tf/Variable" target="_blank" rel="external">tf.Variable</a></li><li><a href="https://www.tensorflow.org/api_docs/python/tf/train/Saver" target="_blank" rel="external">tf.train.Saver</a></li></ul><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>当您创建一个<a href="https://www.tensorflow.org/api_guides/python/state_ops" target="_blank" rel="external">Variable</a>时，您将<code>Tensor</code>作为其初始值传递给<code>Variable()</code>构造函数。TensorFlow提供了一个操作的集合，它们产生经常用于从<a href="https://www.tensorflow.org/api_guides/python/constant_op" target="_blank" rel="external">常量或随机初始化的</a>张量。</p><p>请注意，所有这些操作都需要您指定张量的形状。该形状自动变为变量的形状。变量通常具有固定的形状，但是TensorFlow提供了重新变换变量的高级机制。</p>]]></content:encoded>
      
      <comments>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91-%E5%8F%98%E9%87%8F%EF%BC%9A%E5%88%9B%E5%BB%BA%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%BF%9D%E5%AD%98%E5%92%8C%E5%8A%A0%E8%BD%BD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【Tensorflow r1.0 程序员指南】</title>
      <link>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91/</link>
      <guid>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91/</guid>
      <pubDate>Tue, 08 Aug 2017 13:12:58 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;程序员指南&quot;&gt;&lt;a href=&quot;#程序员指南&quot; class=&quot;headerlink&quot; title=&quot;程序员指南&quot;&gt;&lt;/a&gt;程序员指南&lt;/h2&gt;&lt;p&gt;这一部分文档将深入到TensorFlow的代码细节。这一节由以下几个指南开始，每一个指南都介绍了TensorFlow
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="程序员指南"><a href="#程序员指南" class="headerlink" title="程序员指南"></a>程序员指南</h2><p>这一部分文档将深入到TensorFlow的代码细节。这一节由以下几个指南开始，每一个指南都介绍了TensorFlow的一个特定的方面：</p><ul><li><a href="">变量：创建，初始化，保存和加载</a>，详细介绍了TensorFlow变量的机制。</li><li><a href="">张量等级，形状和类型</a>，这部分说明了Tensor等级（维数），形状（每个维的大小）和数据类型。</li><li><a href="">共享变量</a>，这部分解释了在构建复杂模型时如何共享和管理大量变量。</li><li><a href="">线程和队列</a>，这部分说明了TensorFlow的富队列系统。</li><li><a href="">读取数据</a>，其中记录了将数据导入TensorFlow程序的三种不同机制。</li></ul><p>以下指南适用于对复杂模型的多天训练：</p><ul><li><a href="">监督：多天训练的训练助手</a>，介绍如何在长时间的训练过程中妥善处理系统崩溃。</li></ul><p>TensorFlow提供了一个名叫<code>tfdbg</code>的调试器，它的文档见下面两个指南：</p><ul><li><p><a href="">TensorFlow Debugger（tfdbg）命令行界面教程：MNIST</a>，它将引导您使用<code>tfdbg</code>在低级TensorFlow API中编写的应用程序。</p></li><li><p><a href="">如何在tf.contrib.learn中使用TensorFlow Debugger（tfdbg）</a>，它演示了如何在Estimators API中使用<code>tfdbg</code>。</p></li></ul><p><code>MetaGraph</code>由计算图及其相关元数据组成。<code>MetaGraph</code>包含持续训练，执行评估或在先前训练过的图表上运行推断所需的信息。以下指南是<code>MetaGraph</code>对象的详细说明：</p><ul><li><a href="">MetaGraph的导入和导出</a></li></ul><p><code>SavedModel</code>是Tensorflow模型的通用序列化格式。TensorFlow提供SavedModel CLI（命令行界面）作为在<code>SavedModel</code>中检查和执行<code>MetaGraph</code>的工具。以下指南中记录了详细的用法和示例：</p><ul><li><a href="">SavedModel CLI（命令行界面）</a></li></ul><p>要了解TensorFlow版本控制方案，请参阅以下两个指南：</p><ul><li><a href="">TensorFlow版本语义</a>，这说明了TensorFlow的版本控制术语和兼容性规则。</li><li><a href="">TensorFlow数据版本控制：GraphDefs和检查点</a>，这解释了TensorFlow如何将版本信息添加到计算图形和检查点，以便支持跨版本的兼容性。</li></ul><p>结束本部分有关TensorFlow编程的常见问题：</p><ul><li><a href="">常见问题</a></li></ul>]]></content:encoded>
      
      <comments>http://studyai.site/2017/08/08/%E3%80%90Tensorflow%20r1.0%20%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8C%87%E5%8D%97%E3%80%91/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
